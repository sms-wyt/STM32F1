ARM GAS  /tmp/cc0t2a6z.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"core_cm3.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.__get_PSP,"ax",%progbits
  19              		.align	2
  20              		.global	__get_PSP
  21              		.thumb
  22              		.thumb_func
  24              	__get_PSP:
  25              	.LFB0:
  26              		.file 1 "CMSIS/CM3/CoreSupport/core_cm3.c"
   1:CMSIS/CM3/CoreSupport/core_cm3.c **** /**************************************************************************//**
   2:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @file     core_cm3.c
   3:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @brief    CMSIS Cortex-M3 Core Peripheral Access Layer Source File
   4:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @version  V1.30
   5:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @date     30. October 2009
   6:CMSIS/CM3/CoreSupport/core_cm3.c ****  *
   7:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @note
   8:CMSIS/CM3/CoreSupport/core_cm3.c ****  * Copyright (C) 2009 ARM Limited. All rights reserved.
   9:CMSIS/CM3/CoreSupport/core_cm3.c ****  *
  10:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @par
  11:CMSIS/CM3/CoreSupport/core_cm3.c ****  * ARM Limited (ARM) is supplying this software for use with Cortex-M 
  12:CMSIS/CM3/CoreSupport/core_cm3.c ****  * processor based microcontrollers.  This file can be freely distributed 
  13:CMSIS/CM3/CoreSupport/core_cm3.c ****  * within development tools that are supporting such ARM based processors. 
  14:CMSIS/CM3/CoreSupport/core_cm3.c ****  *
  15:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @par
  16:CMSIS/CM3/CoreSupport/core_cm3.c ****  * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
  17:CMSIS/CM3/CoreSupport/core_cm3.c ****  * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
  18:CMSIS/CM3/CoreSupport/core_cm3.c ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
  19:CMSIS/CM3/CoreSupport/core_cm3.c ****  * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
  20:CMSIS/CM3/CoreSupport/core_cm3.c ****  * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
  21:CMSIS/CM3/CoreSupport/core_cm3.c ****  *
  22:CMSIS/CM3/CoreSupport/core_cm3.c ****  ******************************************************************************/
  23:CMSIS/CM3/CoreSupport/core_cm3.c **** 
  24:CMSIS/CM3/CoreSupport/core_cm3.c **** #include <stdint.h>
  25:CMSIS/CM3/CoreSupport/core_cm3.c **** 
  26:CMSIS/CM3/CoreSupport/core_cm3.c **** /* define compiler specific symbols */
  27:CMSIS/CM3/CoreSupport/core_cm3.c **** #if defined ( __CC_ARM   )
  28:CMSIS/CM3/CoreSupport/core_cm3.c ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
  29:CMSIS/CM3/CoreSupport/core_cm3.c ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
  30:CMSIS/CM3/CoreSupport/core_cm3.c **** 
  31:CMSIS/CM3/CoreSupport/core_cm3.c **** #elif defined ( __ICCARM__ )
  32:CMSIS/CM3/CoreSupport/core_cm3.c ****   #define __ASM           __asm                                       /*!< asm keyword for IAR Comp
ARM GAS  /tmp/cc0t2a6z.s 			page 2


  33:CMSIS/CM3/CoreSupport/core_cm3.c ****   #define __INLINE        inline                                      /*!< inline keyword for IAR C
  34:CMSIS/CM3/CoreSupport/core_cm3.c **** 
  35:CMSIS/CM3/CoreSupport/core_cm3.c **** #elif defined   (  __GNUC__  )
  36:CMSIS/CM3/CoreSupport/core_cm3.c ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
  37:CMSIS/CM3/CoreSupport/core_cm3.c ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
  38:CMSIS/CM3/CoreSupport/core_cm3.c **** 
  39:CMSIS/CM3/CoreSupport/core_cm3.c **** #elif defined   (  __TASKING__  )
  40:CMSIS/CM3/CoreSupport/core_cm3.c ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
  41:CMSIS/CM3/CoreSupport/core_cm3.c ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
  42:CMSIS/CM3/CoreSupport/core_cm3.c **** 
  43:CMSIS/CM3/CoreSupport/core_cm3.c **** #endif
  44:CMSIS/CM3/CoreSupport/core_cm3.c **** 
  45:CMSIS/CM3/CoreSupport/core_cm3.c **** 
  46:CMSIS/CM3/CoreSupport/core_cm3.c **** /* ###################  Compiler specific Intrinsics  ########################### */
  47:CMSIS/CM3/CoreSupport/core_cm3.c **** 
  48:CMSIS/CM3/CoreSupport/core_cm3.c **** #if defined ( __CC_ARM   ) /*------------------RealView Compiler -----------------*/
  49:CMSIS/CM3/CoreSupport/core_cm3.c **** /* ARM armcc specific functions */
  50:CMSIS/CM3/CoreSupport/core_cm3.c **** 
  51:CMSIS/CM3/CoreSupport/core_cm3.c **** /**
  52:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @brief  Return the Process Stack Pointer
  53:CMSIS/CM3/CoreSupport/core_cm3.c ****  *
  54:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @return ProcessStackPointer
  55:CMSIS/CM3/CoreSupport/core_cm3.c ****  *
  56:CMSIS/CM3/CoreSupport/core_cm3.c ****  * Return the actual process stack pointer
  57:CMSIS/CM3/CoreSupport/core_cm3.c ****  */
  58:CMSIS/CM3/CoreSupport/core_cm3.c **** __ASM uint32_t __get_PSP(void)
  59:CMSIS/CM3/CoreSupport/core_cm3.c **** {
  60:CMSIS/CM3/CoreSupport/core_cm3.c ****   mrs r0, psp
  61:CMSIS/CM3/CoreSupport/core_cm3.c ****   bx lr
  62:CMSIS/CM3/CoreSupport/core_cm3.c **** }
  63:CMSIS/CM3/CoreSupport/core_cm3.c **** 
  64:CMSIS/CM3/CoreSupport/core_cm3.c **** /**
  65:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @brief  Set the Process Stack Pointer
  66:CMSIS/CM3/CoreSupport/core_cm3.c ****  *
  67:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @param  topOfProcStack  Process Stack Pointer
  68:CMSIS/CM3/CoreSupport/core_cm3.c ****  *
  69:CMSIS/CM3/CoreSupport/core_cm3.c ****  * Assign the value ProcessStackPointer to the MSP 
  70:CMSIS/CM3/CoreSupport/core_cm3.c ****  * (process stack pointer) Cortex processor register
  71:CMSIS/CM3/CoreSupport/core_cm3.c ****  */
  72:CMSIS/CM3/CoreSupport/core_cm3.c **** __ASM void __set_PSP(uint32_t topOfProcStack)
  73:CMSIS/CM3/CoreSupport/core_cm3.c **** {
  74:CMSIS/CM3/CoreSupport/core_cm3.c ****   msr psp, r0
  75:CMSIS/CM3/CoreSupport/core_cm3.c ****   bx lr
  76:CMSIS/CM3/CoreSupport/core_cm3.c **** }
  77:CMSIS/CM3/CoreSupport/core_cm3.c **** 
  78:CMSIS/CM3/CoreSupport/core_cm3.c **** /**
  79:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @brief  Return the Main Stack Pointer
  80:CMSIS/CM3/CoreSupport/core_cm3.c ****  *
  81:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @return Main Stack Pointer
  82:CMSIS/CM3/CoreSupport/core_cm3.c ****  *
  83:CMSIS/CM3/CoreSupport/core_cm3.c ****  * Return the current value of the MSP (main stack pointer)
  84:CMSIS/CM3/CoreSupport/core_cm3.c ****  * Cortex processor register
  85:CMSIS/CM3/CoreSupport/core_cm3.c ****  */
  86:CMSIS/CM3/CoreSupport/core_cm3.c **** __ASM uint32_t __get_MSP(void)
  87:CMSIS/CM3/CoreSupport/core_cm3.c **** {
  88:CMSIS/CM3/CoreSupport/core_cm3.c ****   mrs r0, msp
  89:CMSIS/CM3/CoreSupport/core_cm3.c ****   bx lr
ARM GAS  /tmp/cc0t2a6z.s 			page 3


  90:CMSIS/CM3/CoreSupport/core_cm3.c **** }
  91:CMSIS/CM3/CoreSupport/core_cm3.c **** 
  92:CMSIS/CM3/CoreSupport/core_cm3.c **** /**
  93:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @brief  Set the Main Stack Pointer
  94:CMSIS/CM3/CoreSupport/core_cm3.c ****  *
  95:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @param  topOfMainStack  Main Stack Pointer
  96:CMSIS/CM3/CoreSupport/core_cm3.c ****  *
  97:CMSIS/CM3/CoreSupport/core_cm3.c ****  * Assign the value mainStackPointer to the MSP 
  98:CMSIS/CM3/CoreSupport/core_cm3.c ****  * (main stack pointer) Cortex processor register
  99:CMSIS/CM3/CoreSupport/core_cm3.c ****  */
 100:CMSIS/CM3/CoreSupport/core_cm3.c **** __ASM void __set_MSP(uint32_t mainStackPointer)
 101:CMSIS/CM3/CoreSupport/core_cm3.c **** {
 102:CMSIS/CM3/CoreSupport/core_cm3.c ****   msr msp, r0
 103:CMSIS/CM3/CoreSupport/core_cm3.c ****   bx lr
 104:CMSIS/CM3/CoreSupport/core_cm3.c **** }
 105:CMSIS/CM3/CoreSupport/core_cm3.c **** 
 106:CMSIS/CM3/CoreSupport/core_cm3.c **** /**
 107:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @brief  Reverse byte order in unsigned short value
 108:CMSIS/CM3/CoreSupport/core_cm3.c ****  *
 109:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @param   value  value to reverse
 110:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @return         reversed value
 111:CMSIS/CM3/CoreSupport/core_cm3.c ****  *
 112:CMSIS/CM3/CoreSupport/core_cm3.c ****  * Reverse byte order in unsigned short value
 113:CMSIS/CM3/CoreSupport/core_cm3.c ****  */
 114:CMSIS/CM3/CoreSupport/core_cm3.c **** __ASM uint32_t __REV16(uint16_t value)
 115:CMSIS/CM3/CoreSupport/core_cm3.c **** {
 116:CMSIS/CM3/CoreSupport/core_cm3.c ****   rev16 r0, r0
 117:CMSIS/CM3/CoreSupport/core_cm3.c ****   bx lr
 118:CMSIS/CM3/CoreSupport/core_cm3.c **** }
 119:CMSIS/CM3/CoreSupport/core_cm3.c **** 
 120:CMSIS/CM3/CoreSupport/core_cm3.c **** /**
 121:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @brief  Reverse byte order in signed short value with sign extension to integer
 122:CMSIS/CM3/CoreSupport/core_cm3.c ****  *
 123:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @param   value  value to reverse
 124:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @return         reversed value
 125:CMSIS/CM3/CoreSupport/core_cm3.c ****  *
 126:CMSIS/CM3/CoreSupport/core_cm3.c ****  * Reverse byte order in signed short value with sign extension to integer
 127:CMSIS/CM3/CoreSupport/core_cm3.c ****  */
 128:CMSIS/CM3/CoreSupport/core_cm3.c **** __ASM int32_t __REVSH(int16_t value)
 129:CMSIS/CM3/CoreSupport/core_cm3.c **** {
 130:CMSIS/CM3/CoreSupport/core_cm3.c ****   revsh r0, r0
 131:CMSIS/CM3/CoreSupport/core_cm3.c ****   bx lr
 132:CMSIS/CM3/CoreSupport/core_cm3.c **** }
 133:CMSIS/CM3/CoreSupport/core_cm3.c **** 
 134:CMSIS/CM3/CoreSupport/core_cm3.c **** 
 135:CMSIS/CM3/CoreSupport/core_cm3.c **** #if (__ARMCC_VERSION < 400000)
 136:CMSIS/CM3/CoreSupport/core_cm3.c **** 
 137:CMSIS/CM3/CoreSupport/core_cm3.c **** /**
 138:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @brief  Remove the exclusive lock created by ldrex
 139:CMSIS/CM3/CoreSupport/core_cm3.c ****  *
 140:CMSIS/CM3/CoreSupport/core_cm3.c ****  * Removes the exclusive lock which is created by ldrex.
 141:CMSIS/CM3/CoreSupport/core_cm3.c ****  */
 142:CMSIS/CM3/CoreSupport/core_cm3.c **** __ASM void __CLREX(void)
 143:CMSIS/CM3/CoreSupport/core_cm3.c **** {
 144:CMSIS/CM3/CoreSupport/core_cm3.c ****   clrex
 145:CMSIS/CM3/CoreSupport/core_cm3.c **** }
 146:CMSIS/CM3/CoreSupport/core_cm3.c **** 
ARM GAS  /tmp/cc0t2a6z.s 			page 4


 147:CMSIS/CM3/CoreSupport/core_cm3.c **** /**
 148:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @brief  Return the Base Priority value
 149:CMSIS/CM3/CoreSupport/core_cm3.c ****  *
 150:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @return BasePriority
 151:CMSIS/CM3/CoreSupport/core_cm3.c ****  *
 152:CMSIS/CM3/CoreSupport/core_cm3.c ****  * Return the content of the base priority register
 153:CMSIS/CM3/CoreSupport/core_cm3.c ****  */
 154:CMSIS/CM3/CoreSupport/core_cm3.c **** __ASM uint32_t  __get_BASEPRI(void)
 155:CMSIS/CM3/CoreSupport/core_cm3.c **** {
 156:CMSIS/CM3/CoreSupport/core_cm3.c ****   mrs r0, basepri
 157:CMSIS/CM3/CoreSupport/core_cm3.c ****   bx lr
 158:CMSIS/CM3/CoreSupport/core_cm3.c **** }
 159:CMSIS/CM3/CoreSupport/core_cm3.c **** 
 160:CMSIS/CM3/CoreSupport/core_cm3.c **** /**
 161:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @brief  Set the Base Priority value
 162:CMSIS/CM3/CoreSupport/core_cm3.c ****  *
 163:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @param  basePri  BasePriority
 164:CMSIS/CM3/CoreSupport/core_cm3.c ****  *
 165:CMSIS/CM3/CoreSupport/core_cm3.c ****  * Set the base priority register
 166:CMSIS/CM3/CoreSupport/core_cm3.c ****  */
 167:CMSIS/CM3/CoreSupport/core_cm3.c **** __ASM void __set_BASEPRI(uint32_t basePri)
 168:CMSIS/CM3/CoreSupport/core_cm3.c **** {
 169:CMSIS/CM3/CoreSupport/core_cm3.c ****   msr basepri, r0
 170:CMSIS/CM3/CoreSupport/core_cm3.c ****   bx lr
 171:CMSIS/CM3/CoreSupport/core_cm3.c **** }
 172:CMSIS/CM3/CoreSupport/core_cm3.c **** 
 173:CMSIS/CM3/CoreSupport/core_cm3.c **** /**
 174:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @brief  Return the Priority Mask value
 175:CMSIS/CM3/CoreSupport/core_cm3.c ****  *
 176:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @return PriMask
 177:CMSIS/CM3/CoreSupport/core_cm3.c ****  *
 178:CMSIS/CM3/CoreSupport/core_cm3.c ****  * Return state of the priority mask bit from the priority mask register
 179:CMSIS/CM3/CoreSupport/core_cm3.c ****  */
 180:CMSIS/CM3/CoreSupport/core_cm3.c **** __ASM uint32_t __get_PRIMASK(void)
 181:CMSIS/CM3/CoreSupport/core_cm3.c **** {
 182:CMSIS/CM3/CoreSupport/core_cm3.c ****   mrs r0, primask
 183:CMSIS/CM3/CoreSupport/core_cm3.c ****   bx lr
 184:CMSIS/CM3/CoreSupport/core_cm3.c **** }
 185:CMSIS/CM3/CoreSupport/core_cm3.c **** 
 186:CMSIS/CM3/CoreSupport/core_cm3.c **** /**
 187:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @brief  Set the Priority Mask value
 188:CMSIS/CM3/CoreSupport/core_cm3.c ****  *
 189:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @param  priMask  PriMask
 190:CMSIS/CM3/CoreSupport/core_cm3.c ****  *
 191:CMSIS/CM3/CoreSupport/core_cm3.c ****  * Set the priority mask bit in the priority mask register
 192:CMSIS/CM3/CoreSupport/core_cm3.c ****  */
 193:CMSIS/CM3/CoreSupport/core_cm3.c **** __ASM void __set_PRIMASK(uint32_t priMask)
 194:CMSIS/CM3/CoreSupport/core_cm3.c **** {
 195:CMSIS/CM3/CoreSupport/core_cm3.c ****   msr primask, r0
 196:CMSIS/CM3/CoreSupport/core_cm3.c ****   bx lr
 197:CMSIS/CM3/CoreSupport/core_cm3.c **** }
 198:CMSIS/CM3/CoreSupport/core_cm3.c **** 
 199:CMSIS/CM3/CoreSupport/core_cm3.c **** /**
 200:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @brief  Return the Fault Mask value
 201:CMSIS/CM3/CoreSupport/core_cm3.c ****  *
 202:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @return FaultMask
 203:CMSIS/CM3/CoreSupport/core_cm3.c ****  *
ARM GAS  /tmp/cc0t2a6z.s 			page 5


 204:CMSIS/CM3/CoreSupport/core_cm3.c ****  * Return the content of the fault mask register
 205:CMSIS/CM3/CoreSupport/core_cm3.c ****  */
 206:CMSIS/CM3/CoreSupport/core_cm3.c **** __ASM uint32_t  __get_FAULTMASK(void)
 207:CMSIS/CM3/CoreSupport/core_cm3.c **** {
 208:CMSIS/CM3/CoreSupport/core_cm3.c ****   mrs r0, faultmask
 209:CMSIS/CM3/CoreSupport/core_cm3.c ****   bx lr
 210:CMSIS/CM3/CoreSupport/core_cm3.c **** }
 211:CMSIS/CM3/CoreSupport/core_cm3.c **** 
 212:CMSIS/CM3/CoreSupport/core_cm3.c **** /**
 213:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @brief  Set the Fault Mask value
 214:CMSIS/CM3/CoreSupport/core_cm3.c ****  *
 215:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @param  faultMask  faultMask value
 216:CMSIS/CM3/CoreSupport/core_cm3.c ****  *
 217:CMSIS/CM3/CoreSupport/core_cm3.c ****  * Set the fault mask register
 218:CMSIS/CM3/CoreSupport/core_cm3.c ****  */
 219:CMSIS/CM3/CoreSupport/core_cm3.c **** __ASM void __set_FAULTMASK(uint32_t faultMask)
 220:CMSIS/CM3/CoreSupport/core_cm3.c **** {
 221:CMSIS/CM3/CoreSupport/core_cm3.c ****   msr faultmask, r0
 222:CMSIS/CM3/CoreSupport/core_cm3.c ****   bx lr
 223:CMSIS/CM3/CoreSupport/core_cm3.c **** }
 224:CMSIS/CM3/CoreSupport/core_cm3.c **** 
 225:CMSIS/CM3/CoreSupport/core_cm3.c **** /**
 226:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @brief  Return the Control Register value
 227:CMSIS/CM3/CoreSupport/core_cm3.c ****  * 
 228:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @return Control value
 229:CMSIS/CM3/CoreSupport/core_cm3.c ****  *
 230:CMSIS/CM3/CoreSupport/core_cm3.c ****  * Return the content of the control register
 231:CMSIS/CM3/CoreSupport/core_cm3.c ****  */
 232:CMSIS/CM3/CoreSupport/core_cm3.c **** __ASM uint32_t __get_CONTROL(void)
 233:CMSIS/CM3/CoreSupport/core_cm3.c **** {
 234:CMSIS/CM3/CoreSupport/core_cm3.c ****   mrs r0, control
 235:CMSIS/CM3/CoreSupport/core_cm3.c ****   bx lr
 236:CMSIS/CM3/CoreSupport/core_cm3.c **** }
 237:CMSIS/CM3/CoreSupport/core_cm3.c **** 
 238:CMSIS/CM3/CoreSupport/core_cm3.c **** /**
 239:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @brief  Set the Control Register value
 240:CMSIS/CM3/CoreSupport/core_cm3.c ****  *
 241:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @param  control  Control value
 242:CMSIS/CM3/CoreSupport/core_cm3.c ****  *
 243:CMSIS/CM3/CoreSupport/core_cm3.c ****  * Set the control register
 244:CMSIS/CM3/CoreSupport/core_cm3.c ****  */
 245:CMSIS/CM3/CoreSupport/core_cm3.c **** __ASM void __set_CONTROL(uint32_t control)
 246:CMSIS/CM3/CoreSupport/core_cm3.c **** {
 247:CMSIS/CM3/CoreSupport/core_cm3.c ****   msr control, r0
 248:CMSIS/CM3/CoreSupport/core_cm3.c ****   bx lr
 249:CMSIS/CM3/CoreSupport/core_cm3.c **** }
 250:CMSIS/CM3/CoreSupport/core_cm3.c **** 
 251:CMSIS/CM3/CoreSupport/core_cm3.c **** #endif /* __ARMCC_VERSION  */ 
 252:CMSIS/CM3/CoreSupport/core_cm3.c **** 
 253:CMSIS/CM3/CoreSupport/core_cm3.c **** 
 254:CMSIS/CM3/CoreSupport/core_cm3.c **** 
 255:CMSIS/CM3/CoreSupport/core_cm3.c **** #elif (defined (__ICCARM__)) /*------------------ ICC Compiler -------------------*/
 256:CMSIS/CM3/CoreSupport/core_cm3.c **** /* IAR iccarm specific functions */
 257:CMSIS/CM3/CoreSupport/core_cm3.c **** #pragma diag_suppress=Pe940
 258:CMSIS/CM3/CoreSupport/core_cm3.c **** 
 259:CMSIS/CM3/CoreSupport/core_cm3.c **** /**
 260:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @brief  Return the Process Stack Pointer
ARM GAS  /tmp/cc0t2a6z.s 			page 6


 261:CMSIS/CM3/CoreSupport/core_cm3.c ****  *
 262:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @return ProcessStackPointer
 263:CMSIS/CM3/CoreSupport/core_cm3.c ****  *
 264:CMSIS/CM3/CoreSupport/core_cm3.c ****  * Return the actual process stack pointer
 265:CMSIS/CM3/CoreSupport/core_cm3.c ****  */
 266:CMSIS/CM3/CoreSupport/core_cm3.c **** uint32_t __get_PSP(void)
 267:CMSIS/CM3/CoreSupport/core_cm3.c **** {
 268:CMSIS/CM3/CoreSupport/core_cm3.c ****   __ASM("mrs r0, psp");
 269:CMSIS/CM3/CoreSupport/core_cm3.c ****   __ASM("bx lr");
 270:CMSIS/CM3/CoreSupport/core_cm3.c **** }
 271:CMSIS/CM3/CoreSupport/core_cm3.c **** 
 272:CMSIS/CM3/CoreSupport/core_cm3.c **** /**
 273:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @brief  Set the Process Stack Pointer
 274:CMSIS/CM3/CoreSupport/core_cm3.c ****  *
 275:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @param  topOfProcStack  Process Stack Pointer
 276:CMSIS/CM3/CoreSupport/core_cm3.c ****  *
 277:CMSIS/CM3/CoreSupport/core_cm3.c ****  * Assign the value ProcessStackPointer to the MSP 
 278:CMSIS/CM3/CoreSupport/core_cm3.c ****  * (process stack pointer) Cortex processor register
 279:CMSIS/CM3/CoreSupport/core_cm3.c ****  */
 280:CMSIS/CM3/CoreSupport/core_cm3.c **** void __set_PSP(uint32_t topOfProcStack)
 281:CMSIS/CM3/CoreSupport/core_cm3.c **** {
 282:CMSIS/CM3/CoreSupport/core_cm3.c ****   __ASM("msr psp, r0");
 283:CMSIS/CM3/CoreSupport/core_cm3.c ****   __ASM("bx lr");
 284:CMSIS/CM3/CoreSupport/core_cm3.c **** }
 285:CMSIS/CM3/CoreSupport/core_cm3.c **** 
 286:CMSIS/CM3/CoreSupport/core_cm3.c **** /**
 287:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @brief  Return the Main Stack Pointer
 288:CMSIS/CM3/CoreSupport/core_cm3.c ****  *
 289:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @return Main Stack Pointer
 290:CMSIS/CM3/CoreSupport/core_cm3.c ****  *
 291:CMSIS/CM3/CoreSupport/core_cm3.c ****  * Return the current value of the MSP (main stack pointer)
 292:CMSIS/CM3/CoreSupport/core_cm3.c ****  * Cortex processor register
 293:CMSIS/CM3/CoreSupport/core_cm3.c ****  */
 294:CMSIS/CM3/CoreSupport/core_cm3.c **** uint32_t __get_MSP(void)
 295:CMSIS/CM3/CoreSupport/core_cm3.c **** {
 296:CMSIS/CM3/CoreSupport/core_cm3.c ****   __ASM("mrs r0, msp");
 297:CMSIS/CM3/CoreSupport/core_cm3.c ****   __ASM("bx lr");
 298:CMSIS/CM3/CoreSupport/core_cm3.c **** }
 299:CMSIS/CM3/CoreSupport/core_cm3.c **** 
 300:CMSIS/CM3/CoreSupport/core_cm3.c **** /**
 301:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @brief  Set the Main Stack Pointer
 302:CMSIS/CM3/CoreSupport/core_cm3.c ****  *
 303:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @param  topOfMainStack  Main Stack Pointer
 304:CMSIS/CM3/CoreSupport/core_cm3.c ****  *
 305:CMSIS/CM3/CoreSupport/core_cm3.c ****  * Assign the value mainStackPointer to the MSP 
 306:CMSIS/CM3/CoreSupport/core_cm3.c ****  * (main stack pointer) Cortex processor register
 307:CMSIS/CM3/CoreSupport/core_cm3.c ****  */
 308:CMSIS/CM3/CoreSupport/core_cm3.c **** void __set_MSP(uint32_t topOfMainStack)
 309:CMSIS/CM3/CoreSupport/core_cm3.c **** {
 310:CMSIS/CM3/CoreSupport/core_cm3.c ****   __ASM("msr msp, r0");
 311:CMSIS/CM3/CoreSupport/core_cm3.c ****   __ASM("bx lr");
 312:CMSIS/CM3/CoreSupport/core_cm3.c **** }
 313:CMSIS/CM3/CoreSupport/core_cm3.c **** 
 314:CMSIS/CM3/CoreSupport/core_cm3.c **** /**
 315:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @brief  Reverse byte order in unsigned short value
 316:CMSIS/CM3/CoreSupport/core_cm3.c ****  *
 317:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @param  value  value to reverse
ARM GAS  /tmp/cc0t2a6z.s 			page 7


 318:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @return        reversed value
 319:CMSIS/CM3/CoreSupport/core_cm3.c ****  *
 320:CMSIS/CM3/CoreSupport/core_cm3.c ****  * Reverse byte order in unsigned short value
 321:CMSIS/CM3/CoreSupport/core_cm3.c ****  */
 322:CMSIS/CM3/CoreSupport/core_cm3.c **** uint32_t __REV16(uint16_t value)
 323:CMSIS/CM3/CoreSupport/core_cm3.c **** {
 324:CMSIS/CM3/CoreSupport/core_cm3.c ****   __ASM("rev16 r0, r0");
 325:CMSIS/CM3/CoreSupport/core_cm3.c ****   __ASM("bx lr");
 326:CMSIS/CM3/CoreSupport/core_cm3.c **** }
 327:CMSIS/CM3/CoreSupport/core_cm3.c **** 
 328:CMSIS/CM3/CoreSupport/core_cm3.c **** /**
 329:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @brief  Reverse bit order of value
 330:CMSIS/CM3/CoreSupport/core_cm3.c ****  *
 331:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @param  value  value to reverse
 332:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @return        reversed value
 333:CMSIS/CM3/CoreSupport/core_cm3.c ****  *
 334:CMSIS/CM3/CoreSupport/core_cm3.c ****  * Reverse bit order of value
 335:CMSIS/CM3/CoreSupport/core_cm3.c ****  */
 336:CMSIS/CM3/CoreSupport/core_cm3.c **** uint32_t __RBIT(uint32_t value)
 337:CMSIS/CM3/CoreSupport/core_cm3.c **** {
 338:CMSIS/CM3/CoreSupport/core_cm3.c ****   __ASM("rbit r0, r0");
 339:CMSIS/CM3/CoreSupport/core_cm3.c ****   __ASM("bx lr");
 340:CMSIS/CM3/CoreSupport/core_cm3.c **** }
 341:CMSIS/CM3/CoreSupport/core_cm3.c **** 
 342:CMSIS/CM3/CoreSupport/core_cm3.c **** /**
 343:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @brief  LDR Exclusive (8 bit)
 344:CMSIS/CM3/CoreSupport/core_cm3.c ****  *
 345:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @param  *addr  address pointer
 346:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @return        value of (*address)
 347:CMSIS/CM3/CoreSupport/core_cm3.c ****  *
 348:CMSIS/CM3/CoreSupport/core_cm3.c ****  * Exclusive LDR command for 8 bit values)
 349:CMSIS/CM3/CoreSupport/core_cm3.c ****  */
 350:CMSIS/CM3/CoreSupport/core_cm3.c **** uint8_t __LDREXB(uint8_t *addr)
 351:CMSIS/CM3/CoreSupport/core_cm3.c **** {
 352:CMSIS/CM3/CoreSupport/core_cm3.c ****   __ASM("ldrexb r0, [r0]");
 353:CMSIS/CM3/CoreSupport/core_cm3.c ****   __ASM("bx lr"); 
 354:CMSIS/CM3/CoreSupport/core_cm3.c **** }
 355:CMSIS/CM3/CoreSupport/core_cm3.c **** 
 356:CMSIS/CM3/CoreSupport/core_cm3.c **** /**
 357:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @brief  LDR Exclusive (16 bit)
 358:CMSIS/CM3/CoreSupport/core_cm3.c ****  *
 359:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @param  *addr  address pointer
 360:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @return        value of (*address)
 361:CMSIS/CM3/CoreSupport/core_cm3.c ****  *
 362:CMSIS/CM3/CoreSupport/core_cm3.c ****  * Exclusive LDR command for 16 bit values
 363:CMSIS/CM3/CoreSupport/core_cm3.c ****  */
 364:CMSIS/CM3/CoreSupport/core_cm3.c **** uint16_t __LDREXH(uint16_t *addr)
 365:CMSIS/CM3/CoreSupport/core_cm3.c **** {
 366:CMSIS/CM3/CoreSupport/core_cm3.c ****   __ASM("ldrexh r0, [r0]");
 367:CMSIS/CM3/CoreSupport/core_cm3.c ****   __ASM("bx lr");
 368:CMSIS/CM3/CoreSupport/core_cm3.c **** }
 369:CMSIS/CM3/CoreSupport/core_cm3.c **** 
 370:CMSIS/CM3/CoreSupport/core_cm3.c **** /**
 371:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @brief  LDR Exclusive (32 bit)
 372:CMSIS/CM3/CoreSupport/core_cm3.c ****  *
 373:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @param  *addr  address pointer
 374:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @return        value of (*address)
ARM GAS  /tmp/cc0t2a6z.s 			page 8


 375:CMSIS/CM3/CoreSupport/core_cm3.c ****  *
 376:CMSIS/CM3/CoreSupport/core_cm3.c ****  * Exclusive LDR command for 32 bit values
 377:CMSIS/CM3/CoreSupport/core_cm3.c ****  */
 378:CMSIS/CM3/CoreSupport/core_cm3.c **** uint32_t __LDREXW(uint32_t *addr)
 379:CMSIS/CM3/CoreSupport/core_cm3.c **** {
 380:CMSIS/CM3/CoreSupport/core_cm3.c ****   __ASM("ldrex r0, [r0]");
 381:CMSIS/CM3/CoreSupport/core_cm3.c ****   __ASM("bx lr");
 382:CMSIS/CM3/CoreSupport/core_cm3.c **** }
 383:CMSIS/CM3/CoreSupport/core_cm3.c **** 
 384:CMSIS/CM3/CoreSupport/core_cm3.c **** /**
 385:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @brief  STR Exclusive (8 bit)
 386:CMSIS/CM3/CoreSupport/core_cm3.c ****  *
 387:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @param  value  value to store
 388:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @param  *addr  address pointer
 389:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @return        successful / failed
 390:CMSIS/CM3/CoreSupport/core_cm3.c ****  *
 391:CMSIS/CM3/CoreSupport/core_cm3.c ****  * Exclusive STR command for 8 bit values
 392:CMSIS/CM3/CoreSupport/core_cm3.c ****  */
 393:CMSIS/CM3/CoreSupport/core_cm3.c **** uint32_t __STREXB(uint8_t value, uint8_t *addr)
 394:CMSIS/CM3/CoreSupport/core_cm3.c **** {
 395:CMSIS/CM3/CoreSupport/core_cm3.c ****   __ASM("strexb r0, r0, [r1]");
 396:CMSIS/CM3/CoreSupport/core_cm3.c ****   __ASM("bx lr");
 397:CMSIS/CM3/CoreSupport/core_cm3.c **** }
 398:CMSIS/CM3/CoreSupport/core_cm3.c **** 
 399:CMSIS/CM3/CoreSupport/core_cm3.c **** /**
 400:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @brief  STR Exclusive (16 bit)
 401:CMSIS/CM3/CoreSupport/core_cm3.c ****  *
 402:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @param  value  value to store
 403:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @param  *addr  address pointer
 404:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @return        successful / failed
 405:CMSIS/CM3/CoreSupport/core_cm3.c ****  *
 406:CMSIS/CM3/CoreSupport/core_cm3.c ****  * Exclusive STR command for 16 bit values
 407:CMSIS/CM3/CoreSupport/core_cm3.c ****  */
 408:CMSIS/CM3/CoreSupport/core_cm3.c **** uint32_t __STREXH(uint16_t value, uint16_t *addr)
 409:CMSIS/CM3/CoreSupport/core_cm3.c **** {
 410:CMSIS/CM3/CoreSupport/core_cm3.c ****   __ASM("strexh r0, r0, [r1]");
 411:CMSIS/CM3/CoreSupport/core_cm3.c ****   __ASM("bx lr");
 412:CMSIS/CM3/CoreSupport/core_cm3.c **** }
 413:CMSIS/CM3/CoreSupport/core_cm3.c **** 
 414:CMSIS/CM3/CoreSupport/core_cm3.c **** /**
 415:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @brief  STR Exclusive (32 bit)
 416:CMSIS/CM3/CoreSupport/core_cm3.c ****  *
 417:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @param  value  value to store
 418:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @param  *addr  address pointer
 419:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @return        successful / failed
 420:CMSIS/CM3/CoreSupport/core_cm3.c ****  *
 421:CMSIS/CM3/CoreSupport/core_cm3.c ****  * Exclusive STR command for 32 bit values
 422:CMSIS/CM3/CoreSupport/core_cm3.c ****  */
 423:CMSIS/CM3/CoreSupport/core_cm3.c **** uint32_t __STREXW(uint32_t value, uint32_t *addr)
 424:CMSIS/CM3/CoreSupport/core_cm3.c **** {
 425:CMSIS/CM3/CoreSupport/core_cm3.c ****   __ASM("strex r0, r0, [r1]");
 426:CMSIS/CM3/CoreSupport/core_cm3.c ****   __ASM("bx lr");
 427:CMSIS/CM3/CoreSupport/core_cm3.c **** }
 428:CMSIS/CM3/CoreSupport/core_cm3.c **** 
 429:CMSIS/CM3/CoreSupport/core_cm3.c **** #pragma diag_default=Pe940
 430:CMSIS/CM3/CoreSupport/core_cm3.c **** 
 431:CMSIS/CM3/CoreSupport/core_cm3.c **** 
ARM GAS  /tmp/cc0t2a6z.s 			page 9


 432:CMSIS/CM3/CoreSupport/core_cm3.c **** #elif (defined (__GNUC__)) /*------------------ GNU Compiler ---------------------*/
 433:CMSIS/CM3/CoreSupport/core_cm3.c **** /* GNU gcc specific functions */
 434:CMSIS/CM3/CoreSupport/core_cm3.c **** 
 435:CMSIS/CM3/CoreSupport/core_cm3.c **** /**
 436:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @brief  Return the Process Stack Pointer
 437:CMSIS/CM3/CoreSupport/core_cm3.c ****  *
 438:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @return ProcessStackPointer
 439:CMSIS/CM3/CoreSupport/core_cm3.c ****  *
 440:CMSIS/CM3/CoreSupport/core_cm3.c ****  * Return the actual process stack pointer
 441:CMSIS/CM3/CoreSupport/core_cm3.c ****  */
 442:CMSIS/CM3/CoreSupport/core_cm3.c **** uint32_t __get_PSP(void) __attribute__( ( naked ) );
 443:CMSIS/CM3/CoreSupport/core_cm3.c **** uint32_t __get_PSP(void)
 444:CMSIS/CM3/CoreSupport/core_cm3.c **** {
  27              		.loc 1 444 0
  28              		.cfi_startproc
  29              		@ Naked Function: prologue and epilogue provided by programmer.
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
 445:CMSIS/CM3/CoreSupport/core_cm3.c ****   uint32_t result=0;
 446:CMSIS/CM3/CoreSupport/core_cm3.c **** 
 447:CMSIS/CM3/CoreSupport/core_cm3.c ****   __ASM volatile ("MRS %0, psp\n\t" 
  33              		.loc 1 447 0
  34              	@ 447 "CMSIS/CM3/CoreSupport/core_cm3.c" 1
  35 0000 EFF30980 		MRS r0, psp
  36 0004 0046     		MOV r0, r0 
  37 0006 7047     		BX  lr     
  38              		
  39              	@ 0 "" 2
  40              	.LVL1:
 448:CMSIS/CM3/CoreSupport/core_cm3.c ****                   "MOV r0, %0 \n\t"
 449:CMSIS/CM3/CoreSupport/core_cm3.c ****                   "BX  lr     \n\t"  : "=r" (result) );
 450:CMSIS/CM3/CoreSupport/core_cm3.c ****   return(result);
 451:CMSIS/CM3/CoreSupport/core_cm3.c **** }
  41              		.loc 1 451 0
  42              		.thumb
  43              		.cfi_endproc
  44              	.LFE0:
  46              		.section	.text.__set_PSP,"ax",%progbits
  47              		.align	2
  48              		.global	__set_PSP
  49              		.thumb
  50              		.thumb_func
  52              	__set_PSP:
  53              	.LFB1:
 452:CMSIS/CM3/CoreSupport/core_cm3.c **** 
 453:CMSIS/CM3/CoreSupport/core_cm3.c **** /**
 454:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @brief  Set the Process Stack Pointer
 455:CMSIS/CM3/CoreSupport/core_cm3.c ****  *
 456:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @param  topOfProcStack  Process Stack Pointer
 457:CMSIS/CM3/CoreSupport/core_cm3.c ****  *
 458:CMSIS/CM3/CoreSupport/core_cm3.c ****  * Assign the value ProcessStackPointer to the MSP 
 459:CMSIS/CM3/CoreSupport/core_cm3.c ****  * (process stack pointer) Cortex processor register
 460:CMSIS/CM3/CoreSupport/core_cm3.c ****  */
 461:CMSIS/CM3/CoreSupport/core_cm3.c **** void __set_PSP(uint32_t topOfProcStack) __attribute__( ( naked ) );
 462:CMSIS/CM3/CoreSupport/core_cm3.c **** void __set_PSP(uint32_t topOfProcStack)
 463:CMSIS/CM3/CoreSupport/core_cm3.c **** {
ARM GAS  /tmp/cc0t2a6z.s 			page 10


  54              		.loc 1 463 0
  55              		.cfi_startproc
  56              		@ Naked Function: prologue and epilogue provided by programmer.
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 0, uses_anonymous_args = 0
  59              	.LVL2:
 464:CMSIS/CM3/CoreSupport/core_cm3.c ****   __ASM volatile ("MSR psp, %0\n\t"
  60              		.loc 1 464 0
  61              	@ 464 "CMSIS/CM3/CoreSupport/core_cm3.c" 1
  62 0000 80F30988 		MSR psp, r0
  63 0004 7047     		BX  lr     
  64              		
  65              	@ 0 "" 2
 465:CMSIS/CM3/CoreSupport/core_cm3.c ****                   "BX  lr     \n\t" : : "r" (topOfProcStack) );
 466:CMSIS/CM3/CoreSupport/core_cm3.c **** }
  66              		.loc 1 466 0
  67              		.thumb
  68              		.cfi_endproc
  69              	.LFE1:
  71 0006 00BF     		.section	.text.__get_MSP,"ax",%progbits
  72              		.align	2
  73              		.global	__get_MSP
  74              		.thumb
  75              		.thumb_func
  77              	__get_MSP:
  78              	.LFB2:
 467:CMSIS/CM3/CoreSupport/core_cm3.c **** 
 468:CMSIS/CM3/CoreSupport/core_cm3.c **** /**
 469:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @brief  Return the Main Stack Pointer
 470:CMSIS/CM3/CoreSupport/core_cm3.c ****  *
 471:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @return Main Stack Pointer
 472:CMSIS/CM3/CoreSupport/core_cm3.c ****  *
 473:CMSIS/CM3/CoreSupport/core_cm3.c ****  * Return the current value of the MSP (main stack pointer)
 474:CMSIS/CM3/CoreSupport/core_cm3.c ****  * Cortex processor register
 475:CMSIS/CM3/CoreSupport/core_cm3.c ****  */
 476:CMSIS/CM3/CoreSupport/core_cm3.c **** uint32_t __get_MSP(void) __attribute__( ( naked ) );
 477:CMSIS/CM3/CoreSupport/core_cm3.c **** uint32_t __get_MSP(void)
 478:CMSIS/CM3/CoreSupport/core_cm3.c **** {
  79              		.loc 1 478 0
  80              		.cfi_startproc
  81              		@ Naked Function: prologue and epilogue provided by programmer.
  82              		@ args = 0, pretend = 0, frame = 0
  83              		@ frame_needed = 0, uses_anonymous_args = 0
  84              	.LVL3:
 479:CMSIS/CM3/CoreSupport/core_cm3.c ****   uint32_t result=0;
 480:CMSIS/CM3/CoreSupport/core_cm3.c **** 
 481:CMSIS/CM3/CoreSupport/core_cm3.c ****   __ASM volatile ("MRS %0, msp\n\t" 
  85              		.loc 1 481 0
  86              	@ 481 "CMSIS/CM3/CoreSupport/core_cm3.c" 1
  87 0000 EFF30880 		MRS r0, msp
  88 0004 0046     		MOV r0, r0 
  89 0006 7047     		BX  lr     
  90              		
  91              	@ 0 "" 2
  92              	.LVL4:
 482:CMSIS/CM3/CoreSupport/core_cm3.c ****                   "MOV r0, %0 \n\t"
 483:CMSIS/CM3/CoreSupport/core_cm3.c ****                   "BX  lr     \n\t"  : "=r" (result) );
ARM GAS  /tmp/cc0t2a6z.s 			page 11


 484:CMSIS/CM3/CoreSupport/core_cm3.c ****   return(result);
 485:CMSIS/CM3/CoreSupport/core_cm3.c **** }
  93              		.loc 1 485 0
  94              		.thumb
  95              		.cfi_endproc
  96              	.LFE2:
  98              		.section	.text.__set_MSP,"ax",%progbits
  99              		.align	2
 100              		.global	__set_MSP
 101              		.thumb
 102              		.thumb_func
 104              	__set_MSP:
 105              	.LFB3:
 486:CMSIS/CM3/CoreSupport/core_cm3.c **** 
 487:CMSIS/CM3/CoreSupport/core_cm3.c **** /**
 488:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @brief  Set the Main Stack Pointer
 489:CMSIS/CM3/CoreSupport/core_cm3.c ****  *
 490:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @param  topOfMainStack  Main Stack Pointer
 491:CMSIS/CM3/CoreSupport/core_cm3.c ****  *
 492:CMSIS/CM3/CoreSupport/core_cm3.c ****  * Assign the value mainStackPointer to the MSP 
 493:CMSIS/CM3/CoreSupport/core_cm3.c ****  * (main stack pointer) Cortex processor register
 494:CMSIS/CM3/CoreSupport/core_cm3.c ****  */
 495:CMSIS/CM3/CoreSupport/core_cm3.c **** void __set_MSP(uint32_t topOfMainStack) __attribute__( ( naked ) );
 496:CMSIS/CM3/CoreSupport/core_cm3.c **** void __set_MSP(uint32_t topOfMainStack)
 497:CMSIS/CM3/CoreSupport/core_cm3.c **** {
 106              		.loc 1 497 0
 107              		.cfi_startproc
 108              		@ Naked Function: prologue and epilogue provided by programmer.
 109              		@ args = 0, pretend = 0, frame = 0
 110              		@ frame_needed = 0, uses_anonymous_args = 0
 111              	.LVL5:
 498:CMSIS/CM3/CoreSupport/core_cm3.c ****   __ASM volatile ("MSR msp, %0\n\t"
 112              		.loc 1 498 0
 113              	@ 498 "CMSIS/CM3/CoreSupport/core_cm3.c" 1
 114 0000 80F30888 		MSR msp, r0
 115 0004 7047     		BX  lr     
 116              		
 117              	@ 0 "" 2
 499:CMSIS/CM3/CoreSupport/core_cm3.c ****                   "BX  lr     \n\t" : : "r" (topOfMainStack) );
 500:CMSIS/CM3/CoreSupport/core_cm3.c **** }
 118              		.loc 1 500 0
 119              		.thumb
 120              		.cfi_endproc
 121              	.LFE3:
 123 0006 00BF     		.section	.text.__get_BASEPRI,"ax",%progbits
 124              		.align	2
 125              		.global	__get_BASEPRI
 126              		.thumb
 127              		.thumb_func
 129              	__get_BASEPRI:
 130              	.LFB4:
 501:CMSIS/CM3/CoreSupport/core_cm3.c **** 
 502:CMSIS/CM3/CoreSupport/core_cm3.c **** /**
 503:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @brief  Return the Base Priority value
 504:CMSIS/CM3/CoreSupport/core_cm3.c ****  *
 505:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @return BasePriority
 506:CMSIS/CM3/CoreSupport/core_cm3.c ****  *
ARM GAS  /tmp/cc0t2a6z.s 			page 12


 507:CMSIS/CM3/CoreSupport/core_cm3.c ****  * Return the content of the base priority register
 508:CMSIS/CM3/CoreSupport/core_cm3.c ****  */
 509:CMSIS/CM3/CoreSupport/core_cm3.c **** uint32_t __get_BASEPRI(void)
 510:CMSIS/CM3/CoreSupport/core_cm3.c **** {
 131              		.loc 1 510 0
 132              		.cfi_startproc
 133              		@ args = 0, pretend = 0, frame = 0
 134              		@ frame_needed = 0, uses_anonymous_args = 0
 135              		@ link register save eliminated.
 136              	.LVL6:
 511:CMSIS/CM3/CoreSupport/core_cm3.c ****   uint32_t result=0;
 512:CMSIS/CM3/CoreSupport/core_cm3.c ****   
 513:CMSIS/CM3/CoreSupport/core_cm3.c ****   __ASM volatile ("MRS %0, basepri_max" : "=r" (result) );
 137              		.loc 1 513 0
 138              	@ 513 "CMSIS/CM3/CoreSupport/core_cm3.c" 1
 139 0000 EFF31280 		MRS r0, basepri_max
 140              	@ 0 "" 2
 141              	.LVL7:
 514:CMSIS/CM3/CoreSupport/core_cm3.c ****   return(result);
 515:CMSIS/CM3/CoreSupport/core_cm3.c **** }
 142              		.loc 1 515 0
 143              		.thumb
 144 0004 7047     		bx	lr
 145              		.cfi_endproc
 146              	.LFE4:
 148 0006 00BF     		.section	.text.__set_BASEPRI,"ax",%progbits
 149              		.align	2
 150              		.global	__set_BASEPRI
 151              		.thumb
 152              		.thumb_func
 154              	__set_BASEPRI:
 155              	.LFB5:
 516:CMSIS/CM3/CoreSupport/core_cm3.c **** 
 517:CMSIS/CM3/CoreSupport/core_cm3.c **** /**
 518:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @brief  Set the Base Priority value
 519:CMSIS/CM3/CoreSupport/core_cm3.c ****  *
 520:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @param  basePri  BasePriority
 521:CMSIS/CM3/CoreSupport/core_cm3.c ****  *
 522:CMSIS/CM3/CoreSupport/core_cm3.c ****  * Set the base priority register
 523:CMSIS/CM3/CoreSupport/core_cm3.c ****  */
 524:CMSIS/CM3/CoreSupport/core_cm3.c **** void __set_BASEPRI(uint32_t value)
 525:CMSIS/CM3/CoreSupport/core_cm3.c **** {
 156              		.loc 1 525 0
 157              		.cfi_startproc
 158              		@ args = 0, pretend = 0, frame = 0
 159              		@ frame_needed = 0, uses_anonymous_args = 0
 160              		@ link register save eliminated.
 161              	.LVL8:
 526:CMSIS/CM3/CoreSupport/core_cm3.c ****   __ASM volatile ("MSR basepri, %0" : : "r" (value) );
 162              		.loc 1 526 0
 163              	@ 526 "CMSIS/CM3/CoreSupport/core_cm3.c" 1
 164 0000 80F31188 		MSR basepri, r0
 165              	@ 0 "" 2
 166              		.thumb
 167 0004 7047     		bx	lr
 168              		.cfi_endproc
 169              	.LFE5:
ARM GAS  /tmp/cc0t2a6z.s 			page 13


 171 0006 00BF     		.section	.text.__get_PRIMASK,"ax",%progbits
 172              		.align	2
 173              		.global	__get_PRIMASK
 174              		.thumb
 175              		.thumb_func
 177              	__get_PRIMASK:
 178              	.LFB6:
 527:CMSIS/CM3/CoreSupport/core_cm3.c **** }
 528:CMSIS/CM3/CoreSupport/core_cm3.c **** 
 529:CMSIS/CM3/CoreSupport/core_cm3.c **** /**
 530:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @brief  Return the Priority Mask value
 531:CMSIS/CM3/CoreSupport/core_cm3.c ****  *
 532:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @return PriMask
 533:CMSIS/CM3/CoreSupport/core_cm3.c ****  *
 534:CMSIS/CM3/CoreSupport/core_cm3.c ****  * Return state of the priority mask bit from the priority mask register
 535:CMSIS/CM3/CoreSupport/core_cm3.c ****  */
 536:CMSIS/CM3/CoreSupport/core_cm3.c **** uint32_t __get_PRIMASK(void)
 537:CMSIS/CM3/CoreSupport/core_cm3.c **** {
 179              		.loc 1 537 0
 180              		.cfi_startproc
 181              		@ args = 0, pretend = 0, frame = 0
 182              		@ frame_needed = 0, uses_anonymous_args = 0
 183              		@ link register save eliminated.
 184              	.LVL9:
 538:CMSIS/CM3/CoreSupport/core_cm3.c ****   uint32_t result=0;
 539:CMSIS/CM3/CoreSupport/core_cm3.c **** 
 540:CMSIS/CM3/CoreSupport/core_cm3.c ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 185              		.loc 1 540 0
 186              	@ 540 "CMSIS/CM3/CoreSupport/core_cm3.c" 1
 187 0000 EFF31080 		MRS r0, primask
 188              	@ 0 "" 2
 189              	.LVL10:
 541:CMSIS/CM3/CoreSupport/core_cm3.c ****   return(result);
 542:CMSIS/CM3/CoreSupport/core_cm3.c **** }
 190              		.loc 1 542 0
 191              		.thumb
 192 0004 7047     		bx	lr
 193              		.cfi_endproc
 194              	.LFE6:
 196 0006 00BF     		.section	.text.__set_PRIMASK,"ax",%progbits
 197              		.align	2
 198              		.global	__set_PRIMASK
 199              		.thumb
 200              		.thumb_func
 202              	__set_PRIMASK:
 203              	.LFB7:
 543:CMSIS/CM3/CoreSupport/core_cm3.c **** 
 544:CMSIS/CM3/CoreSupport/core_cm3.c **** /**
 545:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @brief  Set the Priority Mask value
 546:CMSIS/CM3/CoreSupport/core_cm3.c ****  *
 547:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @param  priMask  PriMask
 548:CMSIS/CM3/CoreSupport/core_cm3.c ****  *
 549:CMSIS/CM3/CoreSupport/core_cm3.c ****  * Set the priority mask bit in the priority mask register
 550:CMSIS/CM3/CoreSupport/core_cm3.c ****  */
 551:CMSIS/CM3/CoreSupport/core_cm3.c **** void __set_PRIMASK(uint32_t priMask)
 552:CMSIS/CM3/CoreSupport/core_cm3.c **** {
 204              		.loc 1 552 0
ARM GAS  /tmp/cc0t2a6z.s 			page 14


 205              		.cfi_startproc
 206              		@ args = 0, pretend = 0, frame = 0
 207              		@ frame_needed = 0, uses_anonymous_args = 0
 208              		@ link register save eliminated.
 209              	.LVL11:
 553:CMSIS/CM3/CoreSupport/core_cm3.c ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) );
 210              		.loc 1 553 0
 211              	@ 553 "CMSIS/CM3/CoreSupport/core_cm3.c" 1
 212 0000 80F31088 		MSR primask, r0
 213              	@ 0 "" 2
 214              		.thumb
 215 0004 7047     		bx	lr
 216              		.cfi_endproc
 217              	.LFE7:
 219 0006 00BF     		.section	.text.__get_FAULTMASK,"ax",%progbits
 220              		.align	2
 221              		.global	__get_FAULTMASK
 222              		.thumb
 223              		.thumb_func
 225              	__get_FAULTMASK:
 226              	.LFB8:
 554:CMSIS/CM3/CoreSupport/core_cm3.c **** }
 555:CMSIS/CM3/CoreSupport/core_cm3.c **** 
 556:CMSIS/CM3/CoreSupport/core_cm3.c **** /**
 557:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @brief  Return the Fault Mask value
 558:CMSIS/CM3/CoreSupport/core_cm3.c ****  *
 559:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @return FaultMask
 560:CMSIS/CM3/CoreSupport/core_cm3.c ****  *
 561:CMSIS/CM3/CoreSupport/core_cm3.c ****  * Return the content of the fault mask register
 562:CMSIS/CM3/CoreSupport/core_cm3.c ****  */
 563:CMSIS/CM3/CoreSupport/core_cm3.c **** uint32_t __get_FAULTMASK(void)
 564:CMSIS/CM3/CoreSupport/core_cm3.c **** {
 227              		.loc 1 564 0
 228              		.cfi_startproc
 229              		@ args = 0, pretend = 0, frame = 0
 230              		@ frame_needed = 0, uses_anonymous_args = 0
 231              		@ link register save eliminated.
 232              	.LVL12:
 565:CMSIS/CM3/CoreSupport/core_cm3.c ****   uint32_t result=0;
 566:CMSIS/CM3/CoreSupport/core_cm3.c ****   
 567:CMSIS/CM3/CoreSupport/core_cm3.c ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 233              		.loc 1 567 0
 234              	@ 567 "CMSIS/CM3/CoreSupport/core_cm3.c" 1
 235 0000 EFF31380 		MRS r0, faultmask
 236              	@ 0 "" 2
 237              	.LVL13:
 568:CMSIS/CM3/CoreSupport/core_cm3.c ****   return(result);
 569:CMSIS/CM3/CoreSupport/core_cm3.c **** }
 238              		.loc 1 569 0
 239              		.thumb
 240 0004 7047     		bx	lr
 241              		.cfi_endproc
 242              	.LFE8:
 244 0006 00BF     		.section	.text.__set_FAULTMASK,"ax",%progbits
 245              		.align	2
 246              		.global	__set_FAULTMASK
 247              		.thumb
ARM GAS  /tmp/cc0t2a6z.s 			page 15


 248              		.thumb_func
 250              	__set_FAULTMASK:
 251              	.LFB9:
 570:CMSIS/CM3/CoreSupport/core_cm3.c **** 
 571:CMSIS/CM3/CoreSupport/core_cm3.c **** /**
 572:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @brief  Set the Fault Mask value
 573:CMSIS/CM3/CoreSupport/core_cm3.c ****  *
 574:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @param  faultMask  faultMask value
 575:CMSIS/CM3/CoreSupport/core_cm3.c ****  *
 576:CMSIS/CM3/CoreSupport/core_cm3.c ****  * Set the fault mask register
 577:CMSIS/CM3/CoreSupport/core_cm3.c ****  */
 578:CMSIS/CM3/CoreSupport/core_cm3.c **** void __set_FAULTMASK(uint32_t faultMask)
 579:CMSIS/CM3/CoreSupport/core_cm3.c **** {
 252              		.loc 1 579 0
 253              		.cfi_startproc
 254              		@ args = 0, pretend = 0, frame = 0
 255              		@ frame_needed = 0, uses_anonymous_args = 0
 256              		@ link register save eliminated.
 257              	.LVL14:
 580:CMSIS/CM3/CoreSupport/core_cm3.c ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) );
 258              		.loc 1 580 0
 259              	@ 580 "CMSIS/CM3/CoreSupport/core_cm3.c" 1
 260 0000 80F31388 		MSR faultmask, r0
 261              	@ 0 "" 2
 262              		.thumb
 263 0004 7047     		bx	lr
 264              		.cfi_endproc
 265              	.LFE9:
 267 0006 00BF     		.section	.text.__get_CONTROL,"ax",%progbits
 268              		.align	2
 269              		.global	__get_CONTROL
 270              		.thumb
 271              		.thumb_func
 273              	__get_CONTROL:
 274              	.LFB10:
 581:CMSIS/CM3/CoreSupport/core_cm3.c **** }
 582:CMSIS/CM3/CoreSupport/core_cm3.c **** 
 583:CMSIS/CM3/CoreSupport/core_cm3.c **** /**
 584:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @brief  Return the Control Register value
 585:CMSIS/CM3/CoreSupport/core_cm3.c **** * 
 586:CMSIS/CM3/CoreSupport/core_cm3.c **** *  @return Control value
 587:CMSIS/CM3/CoreSupport/core_cm3.c ****  *
 588:CMSIS/CM3/CoreSupport/core_cm3.c ****  * Return the content of the control register
 589:CMSIS/CM3/CoreSupport/core_cm3.c ****  */
 590:CMSIS/CM3/CoreSupport/core_cm3.c **** uint32_t __get_CONTROL(void)
 591:CMSIS/CM3/CoreSupport/core_cm3.c **** {
 275              		.loc 1 591 0
 276              		.cfi_startproc
 277              		@ args = 0, pretend = 0, frame = 0
 278              		@ frame_needed = 0, uses_anonymous_args = 0
 279              		@ link register save eliminated.
 280              	.LVL15:
 592:CMSIS/CM3/CoreSupport/core_cm3.c ****   uint32_t result=0;
 593:CMSIS/CM3/CoreSupport/core_cm3.c **** 
 594:CMSIS/CM3/CoreSupport/core_cm3.c ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 281              		.loc 1 594 0
 282              	@ 594 "CMSIS/CM3/CoreSupport/core_cm3.c" 1
ARM GAS  /tmp/cc0t2a6z.s 			page 16


 283 0000 EFF31480 		MRS r0, control
 284              	@ 0 "" 2
 285              	.LVL16:
 595:CMSIS/CM3/CoreSupport/core_cm3.c ****   return(result);
 596:CMSIS/CM3/CoreSupport/core_cm3.c **** }
 286              		.loc 1 596 0
 287              		.thumb
 288 0004 7047     		bx	lr
 289              		.cfi_endproc
 290              	.LFE10:
 292 0006 00BF     		.section	.text.__set_CONTROL,"ax",%progbits
 293              		.align	2
 294              		.global	__set_CONTROL
 295              		.thumb
 296              		.thumb_func
 298              	__set_CONTROL:
 299              	.LFB11:
 597:CMSIS/CM3/CoreSupport/core_cm3.c **** 
 598:CMSIS/CM3/CoreSupport/core_cm3.c **** /**
 599:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @brief  Set the Control Register value
 600:CMSIS/CM3/CoreSupport/core_cm3.c ****  *
 601:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @param  control  Control value
 602:CMSIS/CM3/CoreSupport/core_cm3.c ****  *
 603:CMSIS/CM3/CoreSupport/core_cm3.c ****  * Set the control register
 604:CMSIS/CM3/CoreSupport/core_cm3.c ****  */
 605:CMSIS/CM3/CoreSupport/core_cm3.c **** void __set_CONTROL(uint32_t control)
 606:CMSIS/CM3/CoreSupport/core_cm3.c **** {
 300              		.loc 1 606 0
 301              		.cfi_startproc
 302              		@ args = 0, pretend = 0, frame = 0
 303              		@ frame_needed = 0, uses_anonymous_args = 0
 304              		@ link register save eliminated.
 305              	.LVL17:
 607:CMSIS/CM3/CoreSupport/core_cm3.c ****   __ASM volatile ("MSR control, %0" : : "r" (control) );
 306              		.loc 1 607 0
 307              	@ 607 "CMSIS/CM3/CoreSupport/core_cm3.c" 1
 308 0000 80F31488 		MSR control, r0
 309              	@ 0 "" 2
 310              		.thumb
 311 0004 7047     		bx	lr
 312              		.cfi_endproc
 313              	.LFE11:
 315 0006 00BF     		.section	.text.__REV,"ax",%progbits
 316              		.align	2
 317              		.global	__REV
 318              		.thumb
 319              		.thumb_func
 321              	__REV:
 322              	.LFB12:
 608:CMSIS/CM3/CoreSupport/core_cm3.c **** }
 609:CMSIS/CM3/CoreSupport/core_cm3.c **** 
 610:CMSIS/CM3/CoreSupport/core_cm3.c **** 
 611:CMSIS/CM3/CoreSupport/core_cm3.c **** /**
 612:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @brief  Reverse byte order in integer value
 613:CMSIS/CM3/CoreSupport/core_cm3.c ****  *
 614:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @param  value  value to reverse
 615:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @return        reversed value
ARM GAS  /tmp/cc0t2a6z.s 			page 17


 616:CMSIS/CM3/CoreSupport/core_cm3.c ****  *
 617:CMSIS/CM3/CoreSupport/core_cm3.c ****  * Reverse byte order in integer value
 618:CMSIS/CM3/CoreSupport/core_cm3.c ****  */
 619:CMSIS/CM3/CoreSupport/core_cm3.c **** uint32_t __REV(uint32_t value)
 620:CMSIS/CM3/CoreSupport/core_cm3.c **** {
 323              		.loc 1 620 0
 324              		.cfi_startproc
 325              		@ args = 0, pretend = 0, frame = 0
 326              		@ frame_needed = 0, uses_anonymous_args = 0
 327              		@ link register save eliminated.
 328              	.LVL18:
 621:CMSIS/CM3/CoreSupport/core_cm3.c ****   uint32_t result=0;
 622:CMSIS/CM3/CoreSupport/core_cm3.c ****   
 623:CMSIS/CM3/CoreSupport/core_cm3.c ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 329              		.loc 1 623 0
 330              	@ 623 "CMSIS/CM3/CoreSupport/core_cm3.c" 1
 331 0000 00BA     		rev r0, r0
 332              	@ 0 "" 2
 333              	.LVL19:
 624:CMSIS/CM3/CoreSupport/core_cm3.c ****   return(result);
 625:CMSIS/CM3/CoreSupport/core_cm3.c **** }
 334              		.loc 1 625 0
 335              		.thumb
 336 0002 7047     		bx	lr
 337              		.cfi_endproc
 338              	.LFE12:
 340              		.section	.text.__REV16,"ax",%progbits
 341              		.align	2
 342              		.global	__REV16
 343              		.thumb
 344              		.thumb_func
 346              	__REV16:
 347              	.LFB13:
 626:CMSIS/CM3/CoreSupport/core_cm3.c **** 
 627:CMSIS/CM3/CoreSupport/core_cm3.c **** /**
 628:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @brief  Reverse byte order in unsigned short value
 629:CMSIS/CM3/CoreSupport/core_cm3.c ****  *
 630:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @param  value  value to reverse
 631:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @return        reversed value
 632:CMSIS/CM3/CoreSupport/core_cm3.c ****  *
 633:CMSIS/CM3/CoreSupport/core_cm3.c ****  * Reverse byte order in unsigned short value
 634:CMSIS/CM3/CoreSupport/core_cm3.c ****  */
 635:CMSIS/CM3/CoreSupport/core_cm3.c **** uint32_t __REV16(uint16_t value)
 636:CMSIS/CM3/CoreSupport/core_cm3.c **** {
 348              		.loc 1 636 0
 349              		.cfi_startproc
 350              		@ args = 0, pretend = 0, frame = 0
 351              		@ frame_needed = 0, uses_anonymous_args = 0
 352              		@ link register save eliminated.
 353              	.LVL20:
 637:CMSIS/CM3/CoreSupport/core_cm3.c ****   uint32_t result=0;
 638:CMSIS/CM3/CoreSupport/core_cm3.c ****   
 639:CMSIS/CM3/CoreSupport/core_cm3.c ****   __ASM volatile ("rev16 %0, %1" : "=r" (result) : "r" (value) );
 354              		.loc 1 639 0
 355              	@ 639 "CMSIS/CM3/CoreSupport/core_cm3.c" 1
 356 0000 40BA     		rev16 r0, r0
 357              	@ 0 "" 2
ARM GAS  /tmp/cc0t2a6z.s 			page 18


 358              	.LVL21:
 640:CMSIS/CM3/CoreSupport/core_cm3.c ****   return(result);
 641:CMSIS/CM3/CoreSupport/core_cm3.c **** }
 359              		.loc 1 641 0
 360              		.thumb
 361 0002 7047     		bx	lr
 362              		.cfi_endproc
 363              	.LFE13:
 365              		.section	.text.__REVSH,"ax",%progbits
 366              		.align	2
 367              		.global	__REVSH
 368              		.thumb
 369              		.thumb_func
 371              	__REVSH:
 372              	.LFB14:
 642:CMSIS/CM3/CoreSupport/core_cm3.c **** 
 643:CMSIS/CM3/CoreSupport/core_cm3.c **** /**
 644:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @brief  Reverse byte order in signed short value with sign extension to integer
 645:CMSIS/CM3/CoreSupport/core_cm3.c ****  *
 646:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @param  value  value to reverse
 647:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @return        reversed value
 648:CMSIS/CM3/CoreSupport/core_cm3.c ****  *
 649:CMSIS/CM3/CoreSupport/core_cm3.c ****  * Reverse byte order in signed short value with sign extension to integer
 650:CMSIS/CM3/CoreSupport/core_cm3.c ****  */
 651:CMSIS/CM3/CoreSupport/core_cm3.c **** int32_t __REVSH(int16_t value)
 652:CMSIS/CM3/CoreSupport/core_cm3.c **** {
 373              		.loc 1 652 0
 374              		.cfi_startproc
 375              		@ args = 0, pretend = 0, frame = 0
 376              		@ frame_needed = 0, uses_anonymous_args = 0
 377              		@ link register save eliminated.
 378              	.LVL22:
 653:CMSIS/CM3/CoreSupport/core_cm3.c ****   uint32_t result=0;
 654:CMSIS/CM3/CoreSupport/core_cm3.c ****   
 655:CMSIS/CM3/CoreSupport/core_cm3.c ****   __ASM volatile ("revsh %0, %1" : "=r" (result) : "r" (value) );
 379              		.loc 1 655 0
 380              	@ 655 "CMSIS/CM3/CoreSupport/core_cm3.c" 1
 381 0000 C0BA     		revsh r0, r0
 382              	@ 0 "" 2
 383              	.LVL23:
 656:CMSIS/CM3/CoreSupport/core_cm3.c ****   return(result);
 657:CMSIS/CM3/CoreSupport/core_cm3.c **** }
 384              		.loc 1 657 0
 385              		.thumb
 386 0002 7047     		bx	lr
 387              		.cfi_endproc
 388              	.LFE14:
 390              		.section	.text.__RBIT,"ax",%progbits
 391              		.align	2
 392              		.global	__RBIT
 393              		.thumb
 394              		.thumb_func
 396              	__RBIT:
 397              	.LFB15:
 658:CMSIS/CM3/CoreSupport/core_cm3.c **** 
 659:CMSIS/CM3/CoreSupport/core_cm3.c **** /**
 660:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @brief  Reverse bit order of value
ARM GAS  /tmp/cc0t2a6z.s 			page 19


 661:CMSIS/CM3/CoreSupport/core_cm3.c ****  *
 662:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @param  value  value to reverse
 663:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @return        reversed value
 664:CMSIS/CM3/CoreSupport/core_cm3.c ****  *
 665:CMSIS/CM3/CoreSupport/core_cm3.c ****  * Reverse bit order of value
 666:CMSIS/CM3/CoreSupport/core_cm3.c ****  */
 667:CMSIS/CM3/CoreSupport/core_cm3.c **** uint32_t __RBIT(uint32_t value)
 668:CMSIS/CM3/CoreSupport/core_cm3.c **** {
 398              		.loc 1 668 0
 399              		.cfi_startproc
 400              		@ args = 0, pretend = 0, frame = 0
 401              		@ frame_needed = 0, uses_anonymous_args = 0
 402              		@ link register save eliminated.
 403              	.LVL24:
 669:CMSIS/CM3/CoreSupport/core_cm3.c ****   uint32_t result=0;
 670:CMSIS/CM3/CoreSupport/core_cm3.c ****   
 671:CMSIS/CM3/CoreSupport/core_cm3.c ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 404              		.loc 1 671 0
 405              	@ 671 "CMSIS/CM3/CoreSupport/core_cm3.c" 1
 406 0000 90FAA0F0 		rbit r0, r0
 407              	@ 0 "" 2
 408              	.LVL25:
 672:CMSIS/CM3/CoreSupport/core_cm3.c ****    return(result);
 673:CMSIS/CM3/CoreSupport/core_cm3.c **** }
 409              		.loc 1 673 0
 410              		.thumb
 411 0004 7047     		bx	lr
 412              		.cfi_endproc
 413              	.LFE15:
 415 0006 00BF     		.section	.text.__LDREXB,"ax",%progbits
 416              		.align	2
 417              		.global	__LDREXB
 418              		.thumb
 419              		.thumb_func
 421              	__LDREXB:
 422              	.LFB16:
 674:CMSIS/CM3/CoreSupport/core_cm3.c **** 
 675:CMSIS/CM3/CoreSupport/core_cm3.c **** /**
 676:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @brief  LDR Exclusive (8 bit)
 677:CMSIS/CM3/CoreSupport/core_cm3.c ****  *
 678:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @param  *addr  address pointer
 679:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @return        value of (*address)
 680:CMSIS/CM3/CoreSupport/core_cm3.c ****  *
 681:CMSIS/CM3/CoreSupport/core_cm3.c ****  * Exclusive LDR command for 8 bit value
 682:CMSIS/CM3/CoreSupport/core_cm3.c ****  */
 683:CMSIS/CM3/CoreSupport/core_cm3.c **** uint8_t __LDREXB(uint8_t *addr)
 684:CMSIS/CM3/CoreSupport/core_cm3.c **** {
 423              		.loc 1 684 0
 424              		.cfi_startproc
 425              		@ args = 0, pretend = 0, frame = 0
 426              		@ frame_needed = 0, uses_anonymous_args = 0
 427              		@ link register save eliminated.
 428              	.LVL26:
 685:CMSIS/CM3/CoreSupport/core_cm3.c ****     uint8_t result=0;
 686:CMSIS/CM3/CoreSupport/core_cm3.c ****   
 687:CMSIS/CM3/CoreSupport/core_cm3.c ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) );
 429              		.loc 1 687 0
ARM GAS  /tmp/cc0t2a6z.s 			page 20


 430              	@ 687 "CMSIS/CM3/CoreSupport/core_cm3.c" 1
 431 0000 D0E84F0F 		ldrexb r0, [r0]
 432              	@ 0 "" 2
 433              	.LVL27:
 688:CMSIS/CM3/CoreSupport/core_cm3.c ****    return(result);
 689:CMSIS/CM3/CoreSupport/core_cm3.c **** }
 434              		.loc 1 689 0
 435              		.thumb
 436 0004 C0B2     		uxtb	r0, r0
 437 0006 7047     		bx	lr
 438              		.cfi_endproc
 439              	.LFE16:
 441              		.section	.text.__LDREXH,"ax",%progbits
 442              		.align	2
 443              		.global	__LDREXH
 444              		.thumb
 445              		.thumb_func
 447              	__LDREXH:
 448              	.LFB17:
 690:CMSIS/CM3/CoreSupport/core_cm3.c **** 
 691:CMSIS/CM3/CoreSupport/core_cm3.c **** /**
 692:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @brief  LDR Exclusive (16 bit)
 693:CMSIS/CM3/CoreSupport/core_cm3.c ****  *
 694:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @param  *addr  address pointer
 695:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @return        value of (*address)
 696:CMSIS/CM3/CoreSupport/core_cm3.c ****  *
 697:CMSIS/CM3/CoreSupport/core_cm3.c ****  * Exclusive LDR command for 16 bit values
 698:CMSIS/CM3/CoreSupport/core_cm3.c ****  */
 699:CMSIS/CM3/CoreSupport/core_cm3.c **** uint16_t __LDREXH(uint16_t *addr)
 700:CMSIS/CM3/CoreSupport/core_cm3.c **** {
 449              		.loc 1 700 0
 450              		.cfi_startproc
 451              		@ args = 0, pretend = 0, frame = 0
 452              		@ frame_needed = 0, uses_anonymous_args = 0
 453              		@ link register save eliminated.
 454              	.LVL28:
 701:CMSIS/CM3/CoreSupport/core_cm3.c ****     uint16_t result=0;
 702:CMSIS/CM3/CoreSupport/core_cm3.c ****   
 703:CMSIS/CM3/CoreSupport/core_cm3.c ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) );
 455              		.loc 1 703 0
 456              	@ 703 "CMSIS/CM3/CoreSupport/core_cm3.c" 1
 457 0000 D0E85F0F 		ldrexh r0, [r0]
 458              	@ 0 "" 2
 459              	.LVL29:
 704:CMSIS/CM3/CoreSupport/core_cm3.c ****    return(result);
 705:CMSIS/CM3/CoreSupport/core_cm3.c **** }
 460              		.loc 1 705 0
 461              		.thumb
 462 0004 80B2     		uxth	r0, r0
 463 0006 7047     		bx	lr
 464              		.cfi_endproc
 465              	.LFE17:
 467              		.section	.text.__LDREXW,"ax",%progbits
 468              		.align	2
 469              		.global	__LDREXW
 470              		.thumb
 471              		.thumb_func
ARM GAS  /tmp/cc0t2a6z.s 			page 21


 473              	__LDREXW:
 474              	.LFB18:
 706:CMSIS/CM3/CoreSupport/core_cm3.c **** 
 707:CMSIS/CM3/CoreSupport/core_cm3.c **** /**
 708:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @brief  LDR Exclusive (32 bit)
 709:CMSIS/CM3/CoreSupport/core_cm3.c ****  *
 710:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @param  *addr  address pointer
 711:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @return        value of (*address)
 712:CMSIS/CM3/CoreSupport/core_cm3.c ****  *
 713:CMSIS/CM3/CoreSupport/core_cm3.c ****  * Exclusive LDR command for 32 bit values
 714:CMSIS/CM3/CoreSupport/core_cm3.c ****  */
 715:CMSIS/CM3/CoreSupport/core_cm3.c **** uint32_t __LDREXW(uint32_t *addr)
 716:CMSIS/CM3/CoreSupport/core_cm3.c **** {
 475              		.loc 1 716 0
 476              		.cfi_startproc
 477              		@ args = 0, pretend = 0, frame = 0
 478              		@ frame_needed = 0, uses_anonymous_args = 0
 479              		@ link register save eliminated.
 480              	.LVL30:
 717:CMSIS/CM3/CoreSupport/core_cm3.c ****     uint32_t result=0;
 718:CMSIS/CM3/CoreSupport/core_cm3.c ****   
 719:CMSIS/CM3/CoreSupport/core_cm3.c ****    __ASM volatile ("ldrex %0, [%1]" : "=r" (result) : "r" (addr) );
 481              		.loc 1 719 0
 482              	@ 719 "CMSIS/CM3/CoreSupport/core_cm3.c" 1
 483 0000 50E8000F 		ldrex r0, [r0]
 484              	@ 0 "" 2
 485              	.LVL31:
 720:CMSIS/CM3/CoreSupport/core_cm3.c ****    return(result);
 721:CMSIS/CM3/CoreSupport/core_cm3.c **** }
 486              		.loc 1 721 0
 487              		.thumb
 488 0004 7047     		bx	lr
 489              		.cfi_endproc
 490              	.LFE18:
 492 0006 00BF     		.section	.text.__STREXB,"ax",%progbits
 493              		.align	2
 494              		.global	__STREXB
 495              		.thumb
 496              		.thumb_func
 498              	__STREXB:
 499              	.LFB19:
 722:CMSIS/CM3/CoreSupport/core_cm3.c **** 
 723:CMSIS/CM3/CoreSupport/core_cm3.c **** /**
 724:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @brief  STR Exclusive (8 bit)
 725:CMSIS/CM3/CoreSupport/core_cm3.c ****  *
 726:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @param  value  value to store
 727:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @param  *addr  address pointer
 728:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @return        successful / failed
 729:CMSIS/CM3/CoreSupport/core_cm3.c ****  *
 730:CMSIS/CM3/CoreSupport/core_cm3.c ****  * Exclusive STR command for 8 bit values
 731:CMSIS/CM3/CoreSupport/core_cm3.c ****  */
 732:CMSIS/CM3/CoreSupport/core_cm3.c **** uint32_t __STREXB(uint8_t value, uint8_t *addr)
 733:CMSIS/CM3/CoreSupport/core_cm3.c **** {
 500              		.loc 1 733 0
 501              		.cfi_startproc
 502              		@ args = 0, pretend = 0, frame = 0
 503              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cc0t2a6z.s 			page 22


 504              		@ link register save eliminated.
 505              	.LVL32:
 734:CMSIS/CM3/CoreSupport/core_cm3.c ****    uint32_t result=0;
 735:CMSIS/CM3/CoreSupport/core_cm3.c ****   
 736:CMSIS/CM3/CoreSupport/core_cm3.c ****    //__ASM volatile ("strexb %0, %2, [%1]" : "=r" (result) : "r" (addr), "r" (value) );
 737:CMSIS/CM3/CoreSupport/core_cm3.c ****    __ASM volatile ("strexb %0, %2, [%1]" : "=&r" (result) : "r" (addr), "r" (value) );
 506              		.loc 1 737 0
 507              	@ 737 "CMSIS/CM3/CoreSupport/core_cm3.c" 1
 508 0000 C1E8430F 		strexb r3, r0, [r1]
 509              	@ 0 "" 2
 510              	.LVL33:
 511              		.thumb
 512 0004 1846     		mov	r0, r3
 513              	.LVL34:
 738:CMSIS/CM3/CoreSupport/core_cm3.c ****    return(result);
 739:CMSIS/CM3/CoreSupport/core_cm3.c **** }
 514              		.loc 1 739 0
 515 0006 7047     		bx	lr
 516              		.cfi_endproc
 517              	.LFE19:
 519              		.section	.text.__STREXH,"ax",%progbits
 520              		.align	2
 521              		.global	__STREXH
 522              		.thumb
 523              		.thumb_func
 525              	__STREXH:
 526              	.LFB20:
 740:CMSIS/CM3/CoreSupport/core_cm3.c **** 
 741:CMSIS/CM3/CoreSupport/core_cm3.c **** /**
 742:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @brief  STR Exclusive (16 bit)
 743:CMSIS/CM3/CoreSupport/core_cm3.c ****  *
 744:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @param  value  value to store
 745:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @param  *addr  address pointer
 746:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @return        successful / failed
 747:CMSIS/CM3/CoreSupport/core_cm3.c ****  *
 748:CMSIS/CM3/CoreSupport/core_cm3.c ****  * Exclusive STR command for 16 bit values
 749:CMSIS/CM3/CoreSupport/core_cm3.c ****  */
 750:CMSIS/CM3/CoreSupport/core_cm3.c **** uint32_t __STREXH(uint16_t value, uint16_t *addr)
 751:CMSIS/CM3/CoreSupport/core_cm3.c **** {
 527              		.loc 1 751 0
 528              		.cfi_startproc
 529              		@ args = 0, pretend = 0, frame = 0
 530              		@ frame_needed = 0, uses_anonymous_args = 0
 531              		@ link register save eliminated.
 532              	.LVL35:
 752:CMSIS/CM3/CoreSupport/core_cm3.c ****    uint32_t result=0;
 753:CMSIS/CM3/CoreSupport/core_cm3.c ****   
 754:CMSIS/CM3/CoreSupport/core_cm3.c ****    //__ASM volatile ("strexh %0, %2, [%1]" : "=r" (result) : "r" (addr), "r" (value) );
 755:CMSIS/CM3/CoreSupport/core_cm3.c ****    __ASM volatile ("strexh %0, %2, [%1]" : "=&r" (result) : "r" (addr), "r" (value) );
 533              		.loc 1 755 0
 534              	@ 755 "CMSIS/CM3/CoreSupport/core_cm3.c" 1
 535 0000 C1E8530F 		strexh r3, r0, [r1]
 536              	@ 0 "" 2
 537              	.LVL36:
 538              		.thumb
 539 0004 1846     		mov	r0, r3
 540              	.LVL37:
ARM GAS  /tmp/cc0t2a6z.s 			page 23


 756:CMSIS/CM3/CoreSupport/core_cm3.c ****    return(result);
 757:CMSIS/CM3/CoreSupport/core_cm3.c **** }
 541              		.loc 1 757 0
 542 0006 7047     		bx	lr
 543              		.cfi_endproc
 544              	.LFE20:
 546              		.section	.text.__STREXW,"ax",%progbits
 547              		.align	2
 548              		.global	__STREXW
 549              		.thumb
 550              		.thumb_func
 552              	__STREXW:
 553              	.LFB21:
 758:CMSIS/CM3/CoreSupport/core_cm3.c **** 
 759:CMSIS/CM3/CoreSupport/core_cm3.c **** /**
 760:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @brief  STR Exclusive (32 bit)
 761:CMSIS/CM3/CoreSupport/core_cm3.c ****  *
 762:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @param  value  value to store
 763:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @param  *addr  address pointer
 764:CMSIS/CM3/CoreSupport/core_cm3.c ****  * @return        successful / failed
 765:CMSIS/CM3/CoreSupport/core_cm3.c ****  *
 766:CMSIS/CM3/CoreSupport/core_cm3.c ****  * Exclusive STR command for 32 bit values
 767:CMSIS/CM3/CoreSupport/core_cm3.c ****  */
 768:CMSIS/CM3/CoreSupport/core_cm3.c **** uint32_t __STREXW(uint32_t value, uint32_t *addr)
 769:CMSIS/CM3/CoreSupport/core_cm3.c **** {
 554              		.loc 1 769 0
 555              		.cfi_startproc
 556              		@ args = 0, pretend = 0, frame = 0
 557              		@ frame_needed = 0, uses_anonymous_args = 0
 558              		@ link register save eliminated.
 559              	.LVL38:
 770:CMSIS/CM3/CoreSupport/core_cm3.c ****    uint32_t result=0;
 771:CMSIS/CM3/CoreSupport/core_cm3.c ****   
 772:CMSIS/CM3/CoreSupport/core_cm3.c ****    __ASM volatile ("strex %0, %2, [%1]" : "=r" (result) : "r" (addr), "r" (value) );
 560              		.loc 1 772 0
 561              	@ 772 "CMSIS/CM3/CoreSupport/core_cm3.c" 1
 562 0000 41E80000 		strex r0, r0, [r1]
 563              	@ 0 "" 2
 564              	.LVL39:
 773:CMSIS/CM3/CoreSupport/core_cm3.c ****    return(result);
 774:CMSIS/CM3/CoreSupport/core_cm3.c **** }
 565              		.loc 1 774 0
 566              		.thumb
 567 0004 7047     		bx	lr
 568              		.cfi_endproc
 569              	.LFE21:
 571 0006 00BF     		.text
 572              	.Letext0:
 573              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 574              		.file 3 "/usr/include/newlib/sys/_stdint.h"
ARM GAS  /tmp/cc0t2a6z.s 			page 24


DEFINED SYMBOLS
                            *ABS*:0000000000000000 core_cm3.c
     /tmp/cc0t2a6z.s:19     .text.__get_PSP:0000000000000000 $t
     /tmp/cc0t2a6z.s:24     .text.__get_PSP:0000000000000000 __get_PSP
     /tmp/cc0t2a6z.s:47     .text.__set_PSP:0000000000000000 $t
     /tmp/cc0t2a6z.s:52     .text.__set_PSP:0000000000000000 __set_PSP
     /tmp/cc0t2a6z.s:72     .text.__get_MSP:0000000000000000 $t
     /tmp/cc0t2a6z.s:77     .text.__get_MSP:0000000000000000 __get_MSP
     /tmp/cc0t2a6z.s:99     .text.__set_MSP:0000000000000000 $t
     /tmp/cc0t2a6z.s:104    .text.__set_MSP:0000000000000000 __set_MSP
     /tmp/cc0t2a6z.s:124    .text.__get_BASEPRI:0000000000000000 $t
     /tmp/cc0t2a6z.s:129    .text.__get_BASEPRI:0000000000000000 __get_BASEPRI
     /tmp/cc0t2a6z.s:149    .text.__set_BASEPRI:0000000000000000 $t
     /tmp/cc0t2a6z.s:154    .text.__set_BASEPRI:0000000000000000 __set_BASEPRI
     /tmp/cc0t2a6z.s:172    .text.__get_PRIMASK:0000000000000000 $t
     /tmp/cc0t2a6z.s:177    .text.__get_PRIMASK:0000000000000000 __get_PRIMASK
     /tmp/cc0t2a6z.s:197    .text.__set_PRIMASK:0000000000000000 $t
     /tmp/cc0t2a6z.s:202    .text.__set_PRIMASK:0000000000000000 __set_PRIMASK
     /tmp/cc0t2a6z.s:220    .text.__get_FAULTMASK:0000000000000000 $t
     /tmp/cc0t2a6z.s:225    .text.__get_FAULTMASK:0000000000000000 __get_FAULTMASK
     /tmp/cc0t2a6z.s:245    .text.__set_FAULTMASK:0000000000000000 $t
     /tmp/cc0t2a6z.s:250    .text.__set_FAULTMASK:0000000000000000 __set_FAULTMASK
     /tmp/cc0t2a6z.s:268    .text.__get_CONTROL:0000000000000000 $t
     /tmp/cc0t2a6z.s:273    .text.__get_CONTROL:0000000000000000 __get_CONTROL
     /tmp/cc0t2a6z.s:293    .text.__set_CONTROL:0000000000000000 $t
     /tmp/cc0t2a6z.s:298    .text.__set_CONTROL:0000000000000000 __set_CONTROL
     /tmp/cc0t2a6z.s:316    .text.__REV:0000000000000000 $t
     /tmp/cc0t2a6z.s:321    .text.__REV:0000000000000000 __REV
     /tmp/cc0t2a6z.s:341    .text.__REV16:0000000000000000 $t
     /tmp/cc0t2a6z.s:346    .text.__REV16:0000000000000000 __REV16
     /tmp/cc0t2a6z.s:366    .text.__REVSH:0000000000000000 $t
     /tmp/cc0t2a6z.s:371    .text.__REVSH:0000000000000000 __REVSH
     /tmp/cc0t2a6z.s:391    .text.__RBIT:0000000000000000 $t
     /tmp/cc0t2a6z.s:396    .text.__RBIT:0000000000000000 __RBIT
     /tmp/cc0t2a6z.s:416    .text.__LDREXB:0000000000000000 $t
     /tmp/cc0t2a6z.s:421    .text.__LDREXB:0000000000000000 __LDREXB
     /tmp/cc0t2a6z.s:442    .text.__LDREXH:0000000000000000 $t
     /tmp/cc0t2a6z.s:447    .text.__LDREXH:0000000000000000 __LDREXH
     /tmp/cc0t2a6z.s:468    .text.__LDREXW:0000000000000000 $t
     /tmp/cc0t2a6z.s:473    .text.__LDREXW:0000000000000000 __LDREXW
     /tmp/cc0t2a6z.s:493    .text.__STREXB:0000000000000000 $t
     /tmp/cc0t2a6z.s:498    .text.__STREXB:0000000000000000 __STREXB
     /tmp/cc0t2a6z.s:520    .text.__STREXH:0000000000000000 $t
     /tmp/cc0t2a6z.s:525    .text.__STREXH:0000000000000000 __STREXH
     /tmp/cc0t2a6z.s:547    .text.__STREXW:0000000000000000 $t
     /tmp/cc0t2a6z.s:552    .text.__STREXW:0000000000000000 __STREXW
                     .debug_frame:0000000000000010 $d

NO UNDEFINED SYMBOLS
