ARM GAS  /tmp/ccKFdsaZ.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"misc.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.NVIC_PriorityGroupConfig,"ax",%progbits
  19              		.align	2
  20              		.global	NVIC_PriorityGroupConfig
  21              		.thumb
  22              		.thumb_func
  24              	NVIC_PriorityGroupConfig:
  25              	.LFB29:
  26              		.file 1 "FWLIB/src/misc.c"
   1:FWLIB/src/misc.c **** /**
   2:FWLIB/src/misc.c ****   ******************************************************************************
   3:FWLIB/src/misc.c ****   * @file    misc.c
   4:FWLIB/src/misc.c ****   * @author  MCD Application Team
   5:FWLIB/src/misc.c ****   * @version V3.5.0
   6:FWLIB/src/misc.c ****   * @date    11-March-2011
   7:FWLIB/src/misc.c ****   * @brief   This file provides all the miscellaneous firmware functions (add-on
   8:FWLIB/src/misc.c ****   *          to CMSIS functions).
   9:FWLIB/src/misc.c ****   ******************************************************************************
  10:FWLIB/src/misc.c ****   * @attention
  11:FWLIB/src/misc.c ****   *
  12:FWLIB/src/misc.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  13:FWLIB/src/misc.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  14:FWLIB/src/misc.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  15:FWLIB/src/misc.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  16:FWLIB/src/misc.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  17:FWLIB/src/misc.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  18:FWLIB/src/misc.c ****   *
  19:FWLIB/src/misc.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  20:FWLIB/src/misc.c ****   ******************************************************************************
  21:FWLIB/src/misc.c ****   */
  22:FWLIB/src/misc.c **** 
  23:FWLIB/src/misc.c **** /* Includes ------------------------------------------------------------------*/
  24:FWLIB/src/misc.c **** #include "misc.h"
  25:FWLIB/src/misc.c **** 
  26:FWLIB/src/misc.c **** /** @addtogroup STM32F10x_StdPeriph_Driver
  27:FWLIB/src/misc.c ****   * @{
  28:FWLIB/src/misc.c ****   */
  29:FWLIB/src/misc.c **** 
  30:FWLIB/src/misc.c **** /** @defgroup MISC 
  31:FWLIB/src/misc.c ****   * @brief MISC driver modules
  32:FWLIB/src/misc.c ****   * @{
ARM GAS  /tmp/ccKFdsaZ.s 			page 2


  33:FWLIB/src/misc.c ****   */
  34:FWLIB/src/misc.c **** 
  35:FWLIB/src/misc.c **** /** @defgroup MISC_Private_TypesDefinitions
  36:FWLIB/src/misc.c ****   * @{
  37:FWLIB/src/misc.c ****   */
  38:FWLIB/src/misc.c **** 
  39:FWLIB/src/misc.c **** /**
  40:FWLIB/src/misc.c ****   * @}
  41:FWLIB/src/misc.c ****   */ 
  42:FWLIB/src/misc.c **** 
  43:FWLIB/src/misc.c **** /** @defgroup MISC_Private_Defines
  44:FWLIB/src/misc.c ****   * @{
  45:FWLIB/src/misc.c ****   */
  46:FWLIB/src/misc.c **** 
  47:FWLIB/src/misc.c **** #define AIRCR_VECTKEY_MASK    ((uint32_t)0x05FA0000)
  48:FWLIB/src/misc.c **** /**
  49:FWLIB/src/misc.c ****   * @}
  50:FWLIB/src/misc.c ****   */
  51:FWLIB/src/misc.c **** 
  52:FWLIB/src/misc.c **** /** @defgroup MISC_Private_Macros
  53:FWLIB/src/misc.c ****   * @{
  54:FWLIB/src/misc.c ****   */
  55:FWLIB/src/misc.c **** 
  56:FWLIB/src/misc.c **** /**
  57:FWLIB/src/misc.c ****   * @}
  58:FWLIB/src/misc.c ****   */
  59:FWLIB/src/misc.c **** 
  60:FWLIB/src/misc.c **** /** @defgroup MISC_Private_Variables
  61:FWLIB/src/misc.c ****   * @{
  62:FWLIB/src/misc.c ****   */
  63:FWLIB/src/misc.c **** 
  64:FWLIB/src/misc.c **** /**
  65:FWLIB/src/misc.c ****   * @}
  66:FWLIB/src/misc.c ****   */
  67:FWLIB/src/misc.c **** 
  68:FWLIB/src/misc.c **** /** @defgroup MISC_Private_FunctionPrototypes
  69:FWLIB/src/misc.c ****   * @{
  70:FWLIB/src/misc.c ****   */
  71:FWLIB/src/misc.c **** 
  72:FWLIB/src/misc.c **** /**
  73:FWLIB/src/misc.c ****   * @}
  74:FWLIB/src/misc.c ****   */
  75:FWLIB/src/misc.c **** 
  76:FWLIB/src/misc.c **** /** @defgroup MISC_Private_Functions
  77:FWLIB/src/misc.c ****   * @{
  78:FWLIB/src/misc.c ****   */
  79:FWLIB/src/misc.c **** 
  80:FWLIB/src/misc.c **** /**
  81:FWLIB/src/misc.c ****   * @brief  Configures the priority grouping: pre-emption priority and subpriority.
  82:FWLIB/src/misc.c ****   * @param  NVIC_PriorityGroup: specifies the priority grouping bits length. 
  83:FWLIB/src/misc.c ****   *   This parameter can be one of the following values:
  84:FWLIB/src/misc.c ****   *     @arg NVIC_PriorityGroup_0: 0 bits for pre-emption priority
  85:FWLIB/src/misc.c ****   *                                4 bits for subpriority
  86:FWLIB/src/misc.c ****   *     @arg NVIC_PriorityGroup_1: 1 bits for pre-emption priority
  87:FWLIB/src/misc.c ****   *                                3 bits for subpriority
  88:FWLIB/src/misc.c ****   *     @arg NVIC_PriorityGroup_2: 2 bits for pre-emption priority
  89:FWLIB/src/misc.c ****   *                                2 bits for subpriority
ARM GAS  /tmp/ccKFdsaZ.s 			page 3


  90:FWLIB/src/misc.c ****   *     @arg NVIC_PriorityGroup_3: 3 bits for pre-emption priority
  91:FWLIB/src/misc.c ****   *                                1 bits for subpriority
  92:FWLIB/src/misc.c ****   *     @arg NVIC_PriorityGroup_4: 4 bits for pre-emption priority
  93:FWLIB/src/misc.c ****   *                                0 bits for subpriority
  94:FWLIB/src/misc.c ****   * @retval None
  95:FWLIB/src/misc.c ****   */
  96:FWLIB/src/misc.c **** void NVIC_PriorityGroupConfig(uint32_t NVIC_PriorityGroup)
  97:FWLIB/src/misc.c **** {
  27              		.loc 1 97 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
  98:FWLIB/src/misc.c ****   /* Check the parameters */
  99:FWLIB/src/misc.c ****   assert_param(IS_NVIC_PRIORITY_GROUP(NVIC_PriorityGroup));
 100:FWLIB/src/misc.c ****   
 101:FWLIB/src/misc.c ****   /* Set the PRIGROUP[10:8] bits according to NVIC_PriorityGroup value */
 102:FWLIB/src/misc.c ****   SCB->AIRCR = AIRCR_VECTKEY_MASK | NVIC_PriorityGroup;
  33              		.loc 1 102 0
  34 0000 40F0BF60 		orr	r0, r0, #100139008
  35              	.LVL1:
  36 0004 40F40030 		orr	r0, r0, #131072
  37 0008 014B     		ldr	r3, .L2
  38 000a D860     		str	r0, [r3, #12]
  39 000c 7047     		bx	lr
  40              	.L3:
  41 000e 00BF     		.align	2
  42              	.L2:
  43 0010 00ED00E0 		.word	-536810240
  44              		.cfi_endproc
  45              	.LFE29:
  47              		.section	.text.NVIC_Init,"ax",%progbits
  48              		.align	2
  49              		.global	NVIC_Init
  50              		.thumb
  51              		.thumb_func
  53              	NVIC_Init:
  54              	.LFB30:
 103:FWLIB/src/misc.c **** }
 104:FWLIB/src/misc.c **** 
 105:FWLIB/src/misc.c **** /**
 106:FWLIB/src/misc.c ****   * @brief  Initializes the NVIC peripheral according to the specified
 107:FWLIB/src/misc.c ****   *         parameters in the NVIC_InitStruct.
 108:FWLIB/src/misc.c ****   * @param  NVIC_InitStruct: pointer to a NVIC_InitTypeDef structure that contains
 109:FWLIB/src/misc.c ****   *         the configuration information for the specified NVIC peripheral.
 110:FWLIB/src/misc.c ****   * @retval None
 111:FWLIB/src/misc.c ****   */
 112:FWLIB/src/misc.c **** void NVIC_Init(NVIC_InitTypeDef* NVIC_InitStruct)
 113:FWLIB/src/misc.c **** {
  55              		.loc 1 113 0
  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 0, uses_anonymous_args = 0
  59              		@ link register save eliminated.
  60              	.LVL2:
 114:FWLIB/src/misc.c ****   uint32_t tmppriority = 0x00, tmppre = 0x00, tmpsub = 0x0F;
ARM GAS  /tmp/ccKFdsaZ.s 			page 4


 115:FWLIB/src/misc.c ****   
 116:FWLIB/src/misc.c ****   /* Check the parameters */
 117:FWLIB/src/misc.c ****   assert_param(IS_FUNCTIONAL_STATE(NVIC_InitStruct->NVIC_IRQChannelCmd));
 118:FWLIB/src/misc.c ****   assert_param(IS_NVIC_PREEMPTION_PRIORITY(NVIC_InitStruct->NVIC_IRQChannelPreemptionPriority));  
 119:FWLIB/src/misc.c ****   assert_param(IS_NVIC_SUB_PRIORITY(NVIC_InitStruct->NVIC_IRQChannelSubPriority));
 120:FWLIB/src/misc.c ****     
 121:FWLIB/src/misc.c ****   if (NVIC_InitStruct->NVIC_IRQChannelCmd != DISABLE)
  61              		.loc 1 121 0
  62 0000 C378     		ldrb	r3, [r0, #3]	@ zero_extendqisi2
  63 0002 0BB3     		cbz	r3, .L5
 113:FWLIB/src/misc.c ****   uint32_t tmppriority = 0x00, tmppre = 0x00, tmpsub = 0x0F;
  64              		.loc 1 113 0
  65 0004 10B4     		push	{r4}
  66              	.LCFI0:
  67              		.cfi_def_cfa_offset 4
  68              		.cfi_offset 4, -4
 122:FWLIB/src/misc.c ****   {
 123:FWLIB/src/misc.c ****     /* Compute the Corresponding IRQ Priority --------------------------------*/    
 124:FWLIB/src/misc.c ****     tmppriority = (0x700 - ((SCB->AIRCR) & (uint32_t)0x700))>> 0x08;
  69              		.loc 1 124 0
  70 0006 184B     		ldr	r3, .L9
  71 0008 DA68     		ldr	r2, [r3, #12]
  72 000a D243     		mvns	r2, r2
  73 000c C2F30222 		ubfx	r2, r2, #8, #3
  74              	.LVL3:
 125:FWLIB/src/misc.c ****     tmppre = (0x4 - tmppriority);
  75              		.loc 1 125 0
  76 0010 C2F10404 		rsb	r4, r2, #4
  77              	.LVL4:
 126:FWLIB/src/misc.c ****     tmpsub = tmpsub >> tmppriority;
  78              		.loc 1 126 0
  79 0014 0F23     		movs	r3, #15
  80 0016 23FA02F1 		lsr	r1, r3, r2
  81              	.LVL5:
 127:FWLIB/src/misc.c **** 
 128:FWLIB/src/misc.c ****     tmppriority = (uint32_t)NVIC_InitStruct->NVIC_IRQChannelPreemptionPriority << tmppre;
  82              		.loc 1 128 0
  83 001a 4378     		ldrb	r3, [r0, #1]	@ zero_extendqisi2
  84 001c 03FA04F2 		lsl	r2, r3, r4
  85              	.LVL6:
 129:FWLIB/src/misc.c ****     tmppriority |=  NVIC_InitStruct->NVIC_IRQChannelSubPriority & tmpsub;
  86              		.loc 1 129 0
  87 0020 8378     		ldrb	r3, [r0, #2]	@ zero_extendqisi2
  88 0022 0B40     		ands	r3, r3, r1
  89 0024 1343     		orrs	r3, r3, r2
  90              	.LVL7:
 130:FWLIB/src/misc.c ****     tmppriority = tmppriority << 0x04;
  91              		.loc 1 130 0
  92 0026 1B01     		lsls	r3, r3, #4
  93              	.LVL8:
 131:FWLIB/src/misc.c ****         
 132:FWLIB/src/misc.c ****     NVIC->IP[NVIC_InitStruct->NVIC_IRQChannel] = tmppriority;
  94              		.loc 1 132 0
  95 0028 0278     		ldrb	r2, [r0]	@ zero_extendqisi2
  96 002a DBB2     		uxtb	r3, r3
  97              	.LVL9:
  98 002c 0F49     		ldr	r1, .L9+4
ARM GAS  /tmp/ccKFdsaZ.s 			page 5


  99              	.LVL10:
 100 002e 0A44     		add	r2, r2, r1
 101 0030 82F80033 		strb	r3, [r2, #768]
 133:FWLIB/src/misc.c ****     
 134:FWLIB/src/misc.c ****     /* Enable the Selected IRQ Channels --------------------------------------*/
 135:FWLIB/src/misc.c ****     NVIC->ISER[NVIC_InitStruct->NVIC_IRQChannel >> 0x05] =
 102              		.loc 1 135 0
 103 0034 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 104 0036 5809     		lsrs	r0, r3, #5
 105              	.LVL11:
 136:FWLIB/src/misc.c ****       (uint32_t)0x01 << (NVIC_InitStruct->NVIC_IRQChannel & (uint8_t)0x1F);
 106              		.loc 1 136 0
 107 0038 03F01F03 		and	r3, r3, #31
 108 003c 0122     		movs	r2, #1
 109 003e 02FA03F3 		lsl	r3, r2, r3
 135:FWLIB/src/misc.c ****       (uint32_t)0x01 << (NVIC_InitStruct->NVIC_IRQChannel & (uint8_t)0x1F);
 110              		.loc 1 135 0
 111 0042 41F82030 		str	r3, [r1, r0, lsl #2]
 112 0046 0BE0     		b	.L4
 113              	.LVL12:
 114              	.L5:
 115              	.LCFI1:
 116              		.cfi_def_cfa_offset 0
 117              		.cfi_restore 4
 137:FWLIB/src/misc.c ****   }
 138:FWLIB/src/misc.c ****   else
 139:FWLIB/src/misc.c ****   {
 140:FWLIB/src/misc.c ****     /* Disable the Selected IRQ Channels -------------------------------------*/
 141:FWLIB/src/misc.c ****     NVIC->ICER[NVIC_InitStruct->NVIC_IRQChannel >> 0x05] =
 118              		.loc 1 141 0
 119 0048 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 120 004a 5A09     		lsrs	r2, r3, #5
 142:FWLIB/src/misc.c ****       (uint32_t)0x01 << (NVIC_InitStruct->NVIC_IRQChannel & (uint8_t)0x1F);
 121              		.loc 1 142 0
 122 004c 03F01F03 		and	r3, r3, #31
 123 0050 0121     		movs	r1, #1
 124 0052 9940     		lsls	r1, r1, r3
 141:FWLIB/src/misc.c ****       (uint32_t)0x01 << (NVIC_InitStruct->NVIC_IRQChannel & (uint8_t)0x1F);
 125              		.loc 1 141 0
 126 0054 02F12003 		add	r3, r2, #32
 127 0058 044A     		ldr	r2, .L9+4
 128 005a 42F82310 		str	r1, [r2, r3, lsl #2]
 129 005e 7047     		bx	lr
 130              	.LVL13:
 131              	.L4:
 132              	.LCFI2:
 133              		.cfi_def_cfa_offset 4
 134              		.cfi_offset 4, -4
 143:FWLIB/src/misc.c ****   }
 144:FWLIB/src/misc.c **** }
 135              		.loc 1 144 0
 136 0060 5DF8044B 		ldr	r4, [sp], #4
 137              	.LCFI3:
 138              		.cfi_restore 4
 139              		.cfi_def_cfa_offset 0
 140              	.LVL14:
 141 0064 7047     		bx	lr
ARM GAS  /tmp/ccKFdsaZ.s 			page 6


 142              	.L10:
 143 0066 00BF     		.align	2
 144              	.L9:
 145 0068 00ED00E0 		.word	-536810240
 146 006c 00E100E0 		.word	-536813312
 147              		.cfi_endproc
 148              	.LFE30:
 150              		.section	.text.NVIC_SetVectorTable,"ax",%progbits
 151              		.align	2
 152              		.global	NVIC_SetVectorTable
 153              		.thumb
 154              		.thumb_func
 156              	NVIC_SetVectorTable:
 157              	.LFB31:
 145:FWLIB/src/misc.c **** 
 146:FWLIB/src/misc.c **** /**
 147:FWLIB/src/misc.c ****   * @brief  Sets the vector table location and Offset.
 148:FWLIB/src/misc.c ****   * @param  NVIC_VectTab: specifies if the vector table is in RAM or FLASH memory.
 149:FWLIB/src/misc.c ****   *   This parameter can be one of the following values:
 150:FWLIB/src/misc.c ****   *     @arg NVIC_VectTab_RAM
 151:FWLIB/src/misc.c ****   *     @arg NVIC_VectTab_FLASH
 152:FWLIB/src/misc.c ****   * @param  Offset: Vector Table base offset field. This value must be a multiple 
 153:FWLIB/src/misc.c ****   *         of 0x200.
 154:FWLIB/src/misc.c ****   * @retval None
 155:FWLIB/src/misc.c ****   */
 156:FWLIB/src/misc.c **** void NVIC_SetVectorTable(uint32_t NVIC_VectTab, uint32_t Offset)
 157:FWLIB/src/misc.c **** { 
 158              		.loc 1 157 0
 159              		.cfi_startproc
 160              		@ args = 0, pretend = 0, frame = 0
 161              		@ frame_needed = 0, uses_anonymous_args = 0
 162              		@ link register save eliminated.
 163              	.LVL15:
 158:FWLIB/src/misc.c ****   /* Check the parameters */
 159:FWLIB/src/misc.c ****   assert_param(IS_NVIC_VECTTAB(NVIC_VectTab));
 160:FWLIB/src/misc.c ****   assert_param(IS_NVIC_OFFSET(Offset));  
 161:FWLIB/src/misc.c ****    
 162:FWLIB/src/misc.c ****   SCB->VTOR = NVIC_VectTab | (Offset & (uint32_t)0x1FFFFF80);
 164              		.loc 1 162 0
 165 0000 21F06041 		bic	r1, r1, #-536870912
 166              	.LVL16:
 167 0004 21F07F01 		bic	r1, r1, #127
 168 0008 0843     		orrs	r0, r0, r1
 169              	.LVL17:
 170 000a 014B     		ldr	r3, .L12
 171 000c 9860     		str	r0, [r3, #8]
 172 000e 7047     		bx	lr
 173              	.L13:
 174              		.align	2
 175              	.L12:
 176 0010 00ED00E0 		.word	-536810240
 177              		.cfi_endproc
 178              	.LFE31:
 180              		.section	.text.NVIC_SystemLPConfig,"ax",%progbits
 181              		.align	2
 182              		.global	NVIC_SystemLPConfig
 183              		.thumb
ARM GAS  /tmp/ccKFdsaZ.s 			page 7


 184              		.thumb_func
 186              	NVIC_SystemLPConfig:
 187              	.LFB32:
 163:FWLIB/src/misc.c **** }
 164:FWLIB/src/misc.c **** 
 165:FWLIB/src/misc.c **** /**
 166:FWLIB/src/misc.c ****   * @brief  Selects the condition for the system to enter low power mode.
 167:FWLIB/src/misc.c ****   * @param  LowPowerMode: Specifies the new mode for the system to enter low power mode.
 168:FWLIB/src/misc.c ****   *   This parameter can be one of the following values:
 169:FWLIB/src/misc.c ****   *     @arg NVIC_LP_SEVONPEND
 170:FWLIB/src/misc.c ****   *     @arg NVIC_LP_SLEEPDEEP
 171:FWLIB/src/misc.c ****   *     @arg NVIC_LP_SLEEPONEXIT
 172:FWLIB/src/misc.c ****   * @param  NewState: new state of LP condition. This parameter can be: ENABLE or DISABLE.
 173:FWLIB/src/misc.c ****   * @retval None
 174:FWLIB/src/misc.c ****   */
 175:FWLIB/src/misc.c **** void NVIC_SystemLPConfig(uint8_t LowPowerMode, FunctionalState NewState)
 176:FWLIB/src/misc.c **** {
 188              		.loc 1 176 0
 189              		.cfi_startproc
 190              		@ args = 0, pretend = 0, frame = 0
 191              		@ frame_needed = 0, uses_anonymous_args = 0
 192              		@ link register save eliminated.
 193              	.LVL18:
 177:FWLIB/src/misc.c ****   /* Check the parameters */
 178:FWLIB/src/misc.c ****   assert_param(IS_NVIC_LP(LowPowerMode));
 179:FWLIB/src/misc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));  
 180:FWLIB/src/misc.c ****   
 181:FWLIB/src/misc.c ****   if (NewState != DISABLE)
 194              		.loc 1 181 0
 195 0000 21B1     		cbz	r1, .L15
 182:FWLIB/src/misc.c ****   {
 183:FWLIB/src/misc.c ****     SCB->SCR |= LowPowerMode;
 196              		.loc 1 183 0
 197 0002 054B     		ldr	r3, .L17
 198 0004 1A69     		ldr	r2, [r3, #16]
 199 0006 1043     		orrs	r0, r0, r2
 200              	.LVL19:
 201 0008 1861     		str	r0, [r3, #16]
 202 000a 7047     		bx	lr
 203              	.LVL20:
 204              	.L15:
 184:FWLIB/src/misc.c ****   }
 185:FWLIB/src/misc.c ****   else
 186:FWLIB/src/misc.c ****   {
 187:FWLIB/src/misc.c ****     SCB->SCR &= (uint32_t)(~(uint32_t)LowPowerMode);
 205              		.loc 1 187 0
 206 000c 024A     		ldr	r2, .L17
 207 000e 1369     		ldr	r3, [r2, #16]
 208 0010 23EA0000 		bic	r0, r3, r0
 209              	.LVL21:
 210 0014 1061     		str	r0, [r2, #16]
 211 0016 7047     		bx	lr
 212              	.L18:
 213              		.align	2
 214              	.L17:
 215 0018 00ED00E0 		.word	-536810240
 216              		.cfi_endproc
ARM GAS  /tmp/ccKFdsaZ.s 			page 8


 217              	.LFE32:
 219              		.section	.text.SysTick_CLKSourceConfig,"ax",%progbits
 220              		.align	2
 221              		.global	SysTick_CLKSourceConfig
 222              		.thumb
 223              		.thumb_func
 225              	SysTick_CLKSourceConfig:
 226              	.LFB33:
 188:FWLIB/src/misc.c ****   }
 189:FWLIB/src/misc.c **** }
 190:FWLIB/src/misc.c **** 
 191:FWLIB/src/misc.c **** /**
 192:FWLIB/src/misc.c ****   * @brief  Configures the SysTick clock source.
 193:FWLIB/src/misc.c ****   * @param  SysTick_CLKSource: specifies the SysTick clock source.
 194:FWLIB/src/misc.c ****   *   This parameter can be one of the following values:
 195:FWLIB/src/misc.c ****   *     @arg SysTick_CLKSource_HCLK_Div8: AHB clock divided by 8 selected as SysTick clock source.
 196:FWLIB/src/misc.c ****   *     @arg SysTick_CLKSource_HCLK: AHB clock selected as SysTick clock source.
 197:FWLIB/src/misc.c ****   * @retval None
 198:FWLIB/src/misc.c ****   */
 199:FWLIB/src/misc.c **** void SysTick_CLKSourceConfig(uint32_t SysTick_CLKSource)
 200:FWLIB/src/misc.c **** {
 227              		.loc 1 200 0
 228              		.cfi_startproc
 229              		@ args = 0, pretend = 0, frame = 0
 230              		@ frame_needed = 0, uses_anonymous_args = 0
 231              		@ link register save eliminated.
 232              	.LVL22:
 201:FWLIB/src/misc.c ****   /* Check the parameters */
 202:FWLIB/src/misc.c ****   assert_param(IS_SYSTICK_CLK_SOURCE(SysTick_CLKSource));
 203:FWLIB/src/misc.c ****   if (SysTick_CLKSource == SysTick_CLKSource_HCLK)
 233              		.loc 1 203 0
 234 0000 0428     		cmp	r0, #4
 235 0002 05D1     		bne	.L20
 204:FWLIB/src/misc.c ****   {
 205:FWLIB/src/misc.c ****     SysTick->CTRL |= SysTick_CLKSource_HCLK;
 236              		.loc 1 205 0
 237 0004 054A     		ldr	r2, .L22
 238 0006 1368     		ldr	r3, [r2]
 239 0008 43F00403 		orr	r3, r3, #4
 240 000c 1360     		str	r3, [r2]
 241 000e 7047     		bx	lr
 242              	.L20:
 206:FWLIB/src/misc.c ****   }
 207:FWLIB/src/misc.c ****   else
 208:FWLIB/src/misc.c ****   {
 209:FWLIB/src/misc.c ****     SysTick->CTRL &= SysTick_CLKSource_HCLK_Div8;
 243              		.loc 1 209 0
 244 0010 024A     		ldr	r2, .L22
 245 0012 1368     		ldr	r3, [r2]
 246 0014 23F00403 		bic	r3, r3, #4
 247 0018 1360     		str	r3, [r2]
 248 001a 7047     		bx	lr
 249              	.L23:
 250              		.align	2
 251              	.L22:
 252 001c 10E000E0 		.word	-536813552
 253              		.cfi_endproc
ARM GAS  /tmp/ccKFdsaZ.s 			page 9


 254              	.LFE33:
 256              		.text
 257              	.Letext0:
 258              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 259              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 260              		.file 4 "CMSIS/CM3/CoreSupport/core_cm3.h"
 261              		.file 5 "CMSIS/DeviceSupport/ST/STM32F10x/stm32f10x.h"
 262              		.file 6 "FWLIB/inc/misc.h"
ARM GAS  /tmp/ccKFdsaZ.s 			page 10


DEFINED SYMBOLS
                            *ABS*:0000000000000000 misc.c
     /tmp/ccKFdsaZ.s:19     .text.NVIC_PriorityGroupConfig:0000000000000000 $t
     /tmp/ccKFdsaZ.s:24     .text.NVIC_PriorityGroupConfig:0000000000000000 NVIC_PriorityGroupConfig
     /tmp/ccKFdsaZ.s:43     .text.NVIC_PriorityGroupConfig:0000000000000010 $d
     /tmp/ccKFdsaZ.s:48     .text.NVIC_Init:0000000000000000 $t
     /tmp/ccKFdsaZ.s:53     .text.NVIC_Init:0000000000000000 NVIC_Init
     /tmp/ccKFdsaZ.s:145    .text.NVIC_Init:0000000000000068 $d
     /tmp/ccKFdsaZ.s:151    .text.NVIC_SetVectorTable:0000000000000000 $t
     /tmp/ccKFdsaZ.s:156    .text.NVIC_SetVectorTable:0000000000000000 NVIC_SetVectorTable
     /tmp/ccKFdsaZ.s:176    .text.NVIC_SetVectorTable:0000000000000010 $d
     /tmp/ccKFdsaZ.s:181    .text.NVIC_SystemLPConfig:0000000000000000 $t
     /tmp/ccKFdsaZ.s:186    .text.NVIC_SystemLPConfig:0000000000000000 NVIC_SystemLPConfig
     /tmp/ccKFdsaZ.s:215    .text.NVIC_SystemLPConfig:0000000000000018 $d
     /tmp/ccKFdsaZ.s:220    .text.SysTick_CLKSourceConfig:0000000000000000 $t
     /tmp/ccKFdsaZ.s:225    .text.SysTick_CLKSourceConfig:0000000000000000 SysTick_CLKSourceConfig
     /tmp/ccKFdsaZ.s:252    .text.SysTick_CLKSourceConfig:000000000000001c $d
                     .debug_frame:0000000000000010 $d

NO UNDEFINED SYMBOLS
